{"version":3,"file":"autosuggest.min.js","sources":["../sources/js/helpers/isPromise.js","../sources/js/helpers/hasClass.js","../sources/js/helpers/classListSupport.js","../sources/js/script.js","../sources/js/helpers/isObject.js"],"sourcesContent":["// https://stackoverflow.com/a/53955664/10424385\r\n\r\nconst isPromise = (value) => Boolean(value && typeof value.then === 'function');\r\n\r\nexport default isPromise;\r\n","import classListSupport from './classListSupport';\r\n\r\nconst hasClass = classListSupport\r\n  ? (el, str) => el.classList.contains(str)\r\n  : (el, str) => el.className.indexOf(str) >= 0;\r\n\r\nexport default hasClass;\r\n","const classListSupport = 'classList' in document.createElement('_');\r\nexport default classListSupport;\r\n","// import 'promise-polyfill/src/polyfill'; // enable if you want to support IE\r\nimport isPromise from './helpers/isPromise';\r\nimport isObject from './helpers/isObject';\r\nimport hasClass from './helpers/hasClass';\r\n\r\nclass Autosuggest {\r\n  constructor(\r\n    element,\r\n    {\r\n      delay,\r\n      clearButton,\r\n      howManyCharacters,\r\n      instruction,\r\n      onResults,\r\n      selectFirst,\r\n      onSearch,\r\n      onSubmit = () => { },\r\n    },\r\n  ) {\r\n    this.search = element;\r\n    this.searchId = document.getElementById(this.search);\r\n    this.instruction = instruction\r\n      || 'When autocomplete results are available use up and down arrows to review and enter to select. Touch device users, explore by touch or with swipe gestures.';\r\n    this.onResults = onResults;\r\n    this.onSubmit = onSubmit;\r\n    this.onSearch = isPromise(onSearch)\r\n      ? onSearch\r\n      : (value) => Promise.resolve(onSearch(value));\r\n    this.delay = delay || 1000;\r\n    this.howManyCharacters = howManyCharacters || 2;\r\n    this.clearButton = clearButton || false;\r\n    this.selectFirst = selectFirst || false;\r\n\r\n    // default config\r\n    this.searchOutputUl = 'autocomplete-list';\r\n    this.isLoading = 'auto-is-loading';\r\n    this.isActive = 'auto-is-active';\r\n    this.activeList = 'selected';\r\n    this.selectedOption = 'selectedOption';\r\n\r\n    this.keyCodes = {\r\n      ESC: 27,\r\n      ENTER: 13,\r\n      UP: 40,\r\n      DOWN: 38,\r\n      TAB: 9,\r\n    };\r\n\r\n    this.initialize();\r\n\r\n    this.createOutputSearch();\r\n\r\n    // set default aria\r\n    this.setDefault();\r\n  }\r\n\r\n  // default aria\r\n  setDefault = () => {\r\n    this.searchId.setAttribute('aria-owns', 'autocomplete-list');\r\n    this.searchId.setAttribute('aria-expanded', false);\r\n    this.searchId.setAttribute('aria-describedby', 'initInstruction');\r\n    this.searchId.setAttribute('aria-autocomplete', 'both');\r\n    this.searchId.setAttribute('aria-activedescendant', '');\r\n    this.ariaActivedescendant = document.querySelector(\r\n      '[aria-activedescendant]',\r\n    );\r\n    this.searchId.classList.remove('expanded');\r\n\r\n    if (hasClass(this.matchList, this.isActive)) {\r\n      this.outputSearch.classList.remove(this.isActive);\r\n    }\r\n  }\r\n\r\n  initialize = () => {\r\n    if (this.clearButton) this.createClearButton();\r\n    let timeout = null;\r\n\r\n    this.searchId.addEventListener('input', ({ target }) => {\r\n      this.valueFromSearch = target.value;\r\n      this.classSearch = target.parentNode;\r\n\r\n      this.escapedChar = this.valueFromSearch.replace(\r\n        // eslint-disable-next-line no-useless-escape\r\n        /[`~!@#$%^&*()_|+\\-=÷¿?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/g,\r\n        '',\r\n      );\r\n\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => {\r\n        this.searchItem(this.escapedChar.trim());\r\n      }, this.delay);\r\n    });\r\n  }\r\n\r\n  // create output-list and put after search input\r\n  createOutputSearch = () => {\r\n    this.outputSearch = document.createElement('ul');\r\n    this.outputSearch.id = this.searchOutputUl;\r\n    this.outputSearch.className = 'auto-output-search';\r\n    this.outputSearch.tabIndex = 0;\r\n    this.outputSearch.setAttribute('role', 'listbox');\r\n\r\n    this.searchId.parentNode.insertBefore(\r\n      this.outputSearch,\r\n      this.searchId.nextSibling,\r\n    );\r\n\r\n    this.matchList = document.getElementById(this.searchOutputUl);\r\n    // set instruction\r\n    this.initInstruction();\r\n  }\r\n\r\n  // The async function gets the text from the search\r\n  // and returns the matching array\r\n  searchItem = (input) => {\r\n    this.searchId.parentNode.classList.add(this.isLoading);\r\n\r\n    // console.log(this.howManny, input.length);\r\n    if (this.howManyCharacters > input.length) {\r\n      this.classSearch.classList.remove(this.isLoading);\r\n      this.hiddenButtonHide();\r\n      this.setDefault();\r\n      return;\r\n    }\r\n\r\n    this.onSearch(input).then((result) => {\r\n      // set no result\r\n      const matches = Array.isArray(result)\r\n        ? [...result]\r\n        : JSON.parse(JSON.stringify(result));\r\n\r\n      this.classSearch.classList.remove(this.isLoading);\r\n\r\n      if (result.length === 0) {\r\n        this.hiddenButtonHide();\r\n        this.searchId.classList.remove('expanded');\r\n\r\n        this.setDefault();\r\n      }\r\n\r\n      if (result.length > 0 || isObject(result)) {\r\n        this.outputHtml(matches, input);\r\n      }\r\n    });\r\n  }\r\n\r\n  // instruction aria-describedby\r\n  initInstruction = () => {\r\n    this.describedby = document.createElement('span');\r\n    this.describedby.id = 'initInstruction';\r\n    this.describedby.className = 'init-instruction';\r\n    this.textContent = document.createTextNode(this.instruction);\r\n    this.outputSearch.insertAdjacentElement('afterend', this.describedby);\r\n    this.describedby.appendChild(this.textContent);\r\n  }\r\n\r\n  // hide output div when click on li or press escape\r\n  closeOutputMatchesList = ({ target }) => {\r\n    if (target.id === this.search) return;\r\n\r\n    // set default settings\r\n    this.setDefault();\r\n  }\r\n\r\n  // preparation of the list\r\n  outputHtml(matches, input) {\r\n    // set default index\r\n    this.selected = 0;\r\n\r\n    this.searchId.setAttribute('aria-expanded', true);\r\n    this.searchId.classList.add('expanded');\r\n    this.matchList.innerHTML = this.onResults(matches, input);\r\n\r\n    this.itemsLi = document.querySelectorAll(`#${this.searchOutputUl} > li`);\r\n\r\n    this.matchList.classList.add(this.isActive);\r\n\r\n    // close expanded items\r\n    document.addEventListener('click', this.closeOutputMatchesList);\r\n\r\n    // move with the up / down arrows\r\n    this.searchId.addEventListener('keydown', this.handelEvent);\r\n\r\n    // showing results on clicking on the input field\r\n    // if these results exist\r\n    this.searchId.addEventListener('click', this.showLiItems);\r\n\r\n    // clicking will add the text from the first\r\n    // element to the input field\r\n    this.matchList.addEventListener('click', this.addTextFromLiToSearchInput);\r\n\r\n    // adding aria-selected on mouse event\r\n    for (let i = 0; i < this.itemsLi.length; i++) {\r\n      this.itemsLi[i].addEventListener(\r\n        'mouseenter',\r\n        this.addTextFromLiToSearchInput,\r\n      );\r\n      this.itemsLi[i].addEventListener(\r\n        'mouseleave',\r\n        this.addTextFromLiToSearchInput,\r\n      );\r\n    }\r\n\r\n    // select first li element\r\n    if (this.selectFirst) {\r\n      this.selectFirstItem();\r\n    };\r\n\r\n    // hide button clear\r\n    this.hiddenButtonHide();\r\n  }\r\n\r\n  // select first element\r\n  selectFirstItem = () => {\r\n    const { firstElementChild } = document.getElementById(this.searchOutputUl);\r\n    firstElementChild.id = `${this.selectedOption}-1`;\r\n    firstElementChild.setAttribute('aria-selected', true);\r\n    firstElementChild.classList.add(this.activeList);\r\n\r\n    this.ariaactivedescendant(\r\n      this.ariaActivedescendant,\r\n      `${this.selectedOption}-1`,\r\n    );\r\n\r\n    // set default index\r\n    this.selected = 1;\r\n  }\r\n\r\n  hiddenButtonHide = () => {\r\n    if (!this.clearButton) return;\r\n    this.clearButton.classList.remove('hidden');\r\n  }\r\n\r\n  // show items when items.length >= 1 and is not empty\r\n  showLiItems = () => {\r\n    if (this.matchList.textContent.length > 0) {\r\n      this.searchId.setAttribute('aria-expanded', true);\r\n      this.searchId.classList.add('expanded');\r\n      this.outputSearch.classList.add(this.isActive);\r\n    }\r\n  }\r\n\r\n  // adding text from the list when li is clicking\r\n  // or adding aria-selected to li elements\r\n  addTextFromLiToSearchInput = ({ type, target }) => {\r\n    switch (type) {\r\n      case 'click':\r\n        this.getTextFromLi(target.closest('li'));\r\n        // set default index\r\n        this.selected = 0;\r\n        break;\r\n\r\n      case 'mouseenter':\r\n      case 'mouseleave':\r\n        this.mouseentermouseleave(target, type === 'mouseenter');\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // event on mouse\r\n  mouseentermouseleave = (target, type) => {\r\n    this.checkActiveListExist = document.querySelector(`.${this.activeList}`);\r\n    if (this.checkActiveListExist) this.checkActiveListExist.classList.remove(this.activeList);\r\n\r\n    target.id = type ? `${this.selectedOption}-${this.indexLiSelected(target)}` : '';\r\n    target.setAttribute('aria-selected', !!type);\r\n\r\n    // add or remove class from selected menu\r\n    target.classList[type ? 'add' : 'remove'](this.activeList);\r\n\r\n    this.ariaactivedescendant(\r\n      this.ariaActivedescendant,\r\n      type ? `${this.selectedOption}-${this.indexLiSelected(target)}` : null,\r\n    );\r\n\r\n    // return which li element\r\n    // was selected and set\r\n    this.selected = type ? this.indexLiSelected(target) : 0;\r\n  }\r\n\r\n  // get text from li on enter or mouseenter\r\n  getTextFromLi = (element) => {\r\n    // check if li have children elements\r\n    this.getText = element.firstElementChild\r\n      ? element.firstElementChild\r\n      : element;\r\n\r\n    // add text to input\r\n    this.searchId.value = this.getText.textContent.trim();\r\n\r\n    // set default settings\r\n    this.setDefault();\r\n\r\n    // onSubmit passing text to function\r\n    this.onSubmit(this.getText.textContent.trim());\r\n\r\n    // the part responsible for appending json to the search\r\n    // field use - https://github.com/tomik23/Leaflet.Autocomplete\r\n    if (element.hasAttribute('data-elements')) {\r\n      this.dataElements(element.getAttribute('data-elements'));\r\n    }\r\n  }\r\n\r\n  // return which li element was selected\r\n  // by hovering the mouse over\r\n  indexLiSelected = (target) => Array.prototype.indexOf.call(this.itemsLi, target) + 1;\r\n\r\n  // navigating the elements li and enter\r\n  handelEvent = ({ keyCode }) => {\r\n    this.selectedLi = document.querySelector(`.${this.activeList}`);\r\n\r\n    if (this.searchId.getAttribute('aria-expanded') === 'false') return;\r\n\r\n    switch (keyCode) {\r\n      case this.keyCodes.UP:\r\n        this.selected += 1;\r\n        if (this.selected > this.itemsLi.length) {\r\n          this.selected = 1;\r\n        }\r\n        this.setAriaSelectedItem(this.itemsLi[this.selected - 1]);\r\n        break;\r\n      case this.keyCodes.DOWN:\r\n        this.selected -= 1;\r\n        if (this.selected <= 0) {\r\n          this.selected = this.itemsLi.length;\r\n        }\r\n        this.setAriaSelectedItem(this.itemsLi[this.selected - 1]);\r\n\r\n        break;\r\n      case this.keyCodes.ENTER:\r\n\r\n        this.getTextFromLi(this.selectedLi);\r\n\r\n        break;\r\n\r\n      case this.keyCodes.ESC:\r\n\r\n        this.setDefault();\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.removeAriaSelectedItem();\r\n  }\r\n\r\n  // set aria label on item li\r\n  setAriaSelectedItem = (target) => {\r\n    target.id = `${this.selectedOption}-${this.indexLiSelected(target)}`;\r\n    target.setAttribute('aria-selected', true);\r\n    target.classList.add(this.activeList);\r\n\r\n    this.ariaactivedescendant(this.ariaActivedescendant, `${this.selectedOption}-${this.indexLiSelected(target)}`);\r\n  }\r\n\r\n  // remove aria label from item li\r\n  removeAriaSelectedItem = () => {\r\n    if (!this.selectedLi) return;\r\n    this.selectedLi.id = '';\r\n    this.selectedLi.classList.remove(this.activeList);\r\n    this.selectedLi.setAttribute('aria-selected', false);\r\n  }\r\n\r\n  // Set aria-activedescendant\r\n  ariaactivedescendant = (element, type) => {\r\n    element.setAttribute('aria-activedescendant', type || '');\r\n  }\r\n\r\n  // create clear button and\r\n  // removing text from the input field\r\n  createClearButton = () => {\r\n    this.clearButton = document.createElement('button');\r\n    this.clearButton.id = `auto-clear-${this.search}`;\r\n    this.clearButton.classList.add('auto-clear', 'hidden');\r\n    this.clearButton.setAttribute('type', 'button');\r\n    this.clearButton.setAttribute('aria-label', 'claar text from input');\r\n\r\n    this.searchId.insertAdjacentElement('afterend', this.clearButton);\r\n\r\n    this.clearButton.addEventListener('click', this.handleClearButton);\r\n  }\r\n\r\n  // clicking on the clear button\r\n  handleClearButton = ({ target }) => {\r\n    // hides clear button\r\n    target.classList.add('hidden');\r\n    // clear value searchId\r\n    this.searchId.value = '';\r\n    // set focus\r\n    this.searchId.focus();\r\n    // remove li from ul\r\n    this.outputSearch.textContent = '';\r\n    // set default aria\r\n    this.setDefault();\r\n  }\r\n\r\n  // the part responsible for appending json to the search\r\n  // field use - https://github.com/tomik23/Leaflet.Autocomplete\r\n  dataElements = (item) => {\r\n    if (!item) return;\r\n    this.searchId.setAttribute('data-elements', item);\r\n  }\r\n}\r\n\r\nexport default Autosuggest;\r\n","const isObject = (value) => value && typeof value === 'object' && value.constructor === Object;\r\n\r\nexport default isObject;\r\n"],"names":["hasClass","document","createElement","el","str","classList","contains","className","indexOf","element","value","delay","clearButton","howManyCharacters","instruction","onResults","selectFirst","onSearch","onSubmit","_this","searchId","setAttribute","ariaActivedescendant","querySelector","remove","matchList","isActive","outputSearch","createClearButton","timeout","addEventListener","target","valueFromSearch","classSearch","parentNode","escapedChar","replace","clearTimeout","setTimeout","searchItem","trim","id","searchOutputUl","tabIndex","insertBefore","nextSibling","getElementById","initInstruction","input","add","isLoading","length","hiddenButtonHide","setDefault","then","result","matches","Array","isArray","JSON","parse","stringify","_typeof","constructor","Object","outputHtml","describedby","textContent","createTextNode","insertAdjacentElement","appendChild","search","firstElementChild","selectedOption","activeList","ariaactivedescendant","selected","type","getTextFromLi","closest","mouseentermouseleave","checkActiveListExist","indexLiSelected","getText","hasAttribute","dataElements","getAttribute","prototype","call","itemsLi","keyCode","selectedLi","keyCodes","UP","setAriaSelectedItem","DOWN","ENTER","ESC","removeAriaSelectedItem","handleClearButton","focus","item","this","Boolean","Promise","resolve","TAB","initialize","createOutputSearch","innerHTML","querySelectorAll","closeOutputMatchesList","handelEvent","showLiItems","addTextFromLiToSearchInput","i","selectFirstItem"],"mappings":"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"}