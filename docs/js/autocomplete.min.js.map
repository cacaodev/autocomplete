{"version":3,"file":"autocomplete.min.js","sources":["../../sources/js/utils/function.js","../../sources/js/utils/keyCodes.js","../../sources/js/script.js"],"sourcesContent":["/**\r\n * Check is a Object\r\n * @param {Object} value\r\n * @returns {Boolean}\r\n */\r\nconst isObject = (value) =>\r\n  value && typeof value === \"object\" && value.constructor === Object;\r\n\r\n/**\r\n * Check if is a Promise\r\n * https://stackoverflow.com/a/53955664/10424385\r\n *\r\n * @param {Object} value\r\n * @returns {Boolean}\r\n */\r\nconst isPromise = (value) => Boolean(value && typeof value.then === \"function\");\r\n\r\n/**\r\n * Set attributes to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {Object} object\r\n */\r\nconst setAttributes = (el, object) => {\r\n  for (let key in object) {\r\n    if (key === \"addClass\") {\r\n      el.classList.add(object[key]);\r\n    } else if (key === \"removeClass\") {\r\n      el.classList.remove(object[key]);\r\n    } else {\r\n      el.setAttribute(key, object[key]);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Get first element from child\r\n *\r\n * @param {HTMLElement} element\r\n * @returns {HTMLELement}\r\n */\r\nconst getFirstElement = (element) => element.firstElementChild || element;\r\n\r\n/**\r\n * Set data from li to input\r\n *\r\n * @param {String} element\r\n * @param {HTMLElement} root\r\n * @returns {String}\r\n */\r\nconst getFirstElementFromLiAndAddToInput = (element, root) =>\r\n  // get first element from li and add to input\r\n  (root.value = getFirstElement(element).textContent.trim());\r\n\r\n/**\r\n * Scroll to top result-list\r\n * @param {HTMLElement} resultList\r\n * @param {HTMLElement} resultWrap\r\n */\r\nconst scrollResultsToTop = (resultList, resultWrap) => {\r\n  // if there is an overflow of ul element, after\r\n  // opening we always move ul to the top of the results\r\n  resultList.scrollTop = resultList.offsetTop - resultWrap.offsetHeight;\r\n};\r\n\r\n/**\r\n * Adding role, tabindex, aria and call handleMouse\r\n *\r\n * @param {HTMLElement} itemsLi\r\n */\r\nconst addAriaToAllLiElements = (itemsLi) => {\r\n  // add role to all li elements\r\n  for (let i = 0; i < itemsLi.length; i++) {\r\n    setAttributes(itemsLi[i], {\r\n      role: \"option\",\r\n      tabindex: \"-1\",\r\n      \"aria-selected\": \"false\",\r\n      \"aria-setsize\": itemsLi.length,\r\n      \"aria-posinset\": i,\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Show btn to clear data\r\n *\r\n * @param {HTMLElement} clearButton - button to clear data\r\n * @param {Function} destroy - destroy function\r\n */\r\nconst showBtnToClearData = (clearButton = false, destroy) => {\r\n  if (!clearButton) return;\r\n\r\n  clearButton.classList.remove(\"hidden\");\r\n  // add event to clear button\r\n  clearButton.addEventListener(\"click\", destroy);\r\n};\r\n\r\n/**\r\n * Set aria-activedescendant\r\n *\r\n * @param {HTMLElement} root - search input\r\n * @param {String} type\r\n */\r\nconst setAriaActivedescendant = (root, type) => {\r\n  root.setAttribute(\"aria-activedescendant\", type || \"\");\r\n};\r\n\r\n/**\r\n * Get height of ul without group class\r\n *\r\n * @param {String} outputUl\r\n * @param {String} classGroup\r\n * @returns {Number}\r\n */\r\nconst getClassGroupHeight = (outputUl, classGroup) => {\r\n  // get height of ul without group class\r\n  const allLi = document.querySelectorAll(\r\n    `#${outputUl} > li:not(.${classGroup})`\r\n  );\r\n  let height = 0;\r\n  [].slice.call(allLi).map((el) => (height += el.offsetHeight));\r\n\r\n  // return height\r\n  return height;\r\n};\r\n\r\n/**\r\n * Scroll into view when press up/down arrows\r\n *\r\n * @param {HTMLElement} target\r\n * @param {HTMLElement} outputUl\r\n * @param {String} classGroup\r\n * @param {HTMLElement} resultList\r\n */\r\nconst followActiveElement = (target, outputUl, classGroup, resultList) => {\r\n  const previusElement = resultList.previousSibling;\r\n\r\n  const previusElementHeight = previusElement ? previusElement.offsetHeight : 0;\r\n\r\n  if (target.getAttribute(\"aria-posinset\") == \"0\") {\r\n    resultList.scrollTop =\r\n      target.offsetTop - getClassGroupHeight(outputUl, classGroup);\r\n  }\r\n\r\n  if (target.offsetTop - previusElementHeight < resultList.scrollTop) {\r\n    resultList.scrollTop = target.offsetTop - previusElementHeight;\r\n  } else {\r\n    const offsetBottom =\r\n      target.offsetTop + target.offsetHeight - previusElementHeight;\r\n    const scrollBottom = resultList.scrollTop + resultList.offsetHeight;\r\n    if (offsetBottom > scrollBottom) {\r\n      resultList.scrollTop = offsetBottom - resultList.offsetHeight;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Create output-list and put after search input\r\n *\r\n * @param {HTMLElement} root - search input\r\n * @param {HTMLElement} resultList - output-list ul\r\n * @param {String} outputUl - id name of output-list\r\n * @param {HTMLElement} resultWrap - wrapper ul element\r\n * @param {String} prefix - add prefix to all class auto\r\n */\r\nconst output = (root, resultList, outputUl, resultWrap, prefix) => {\r\n  // set attribute to results-list\r\n  setAttributes(resultList, {\r\n    id: outputUl,\r\n    tabIndex: \"0\",\r\n    role: \"listbox\",\r\n  });\r\n\r\n  // add class to wrap element\r\n  setAttributes(resultWrap, {\r\n    addClass: `${prefix}-results-wrapper`,\r\n  });\r\n\r\n  // insert the results into the wrap element\r\n  resultWrap.insertAdjacentElement(\"beforeend\", resultList);\r\n\r\n  // insert the wrap element after the search input\r\n  root.parentNode.insertBefore(resultWrap, root.nextSibling);\r\n};\r\n\r\n/**\r\n * Create element\r\n *\r\n * @param {String} type - type of element\r\n * @returns {HTMLDivElement}\r\n */\r\nconst createElement = (type) => document.createElement(type);\r\n\r\nexport {\r\n  addAriaToAllLiElements,\r\n  createElement,\r\n  followActiveElement,\r\n  getFirstElementFromLiAndAddToInput,\r\n  isObject,\r\n  isPromise,\r\n  output,\r\n  scrollResultsToTop,\r\n  setAriaActivedescendant,\r\n  setAttributes,\r\n  showBtnToClearData,\r\n};\r\n","/**\r\n * Key codes\r\n */\r\nconst keyCodes = {\r\n  ESC: 27,\r\n  ENTER: 13,\r\n  UP: 38,\r\n  DOWN: 40,\r\n  TAB: 9,\r\n};\r\n\r\nexport default keyCodes;\r\n","import {\r\n  addAriaToAllLiElements,\r\n  createElement,\r\n  followActiveElement,\r\n  getFirstElementFromLiAndAddToInput,\r\n  isObject,\r\n  isPromise,\r\n  output,\r\n  scrollResultsToTop,\r\n  setAriaActivedescendant,\r\n  setAttributes,\r\n  showBtnToClearData,\r\n} from \"./utils/function\";\r\n\r\nimport keyCodes from \"./utils/keyCodes\";\r\n\r\n/**\r\n * @class Autocomplete\r\n */\r\nexport default class Autocomplete {\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {String} element\r\n   * @param {Object} object\r\n   */\r\n  constructor(\r\n    element,\r\n    {\r\n      delay = 500,\r\n      clearButton = true,\r\n      howManyCharacters = 1,\r\n      selectFirst = false,\r\n      insertToInput = false,\r\n      showAllValues = false,\r\n      cache = false,\r\n      disableCloseOnSelect = false,\r\n      classGroup,\r\n      classPreventClosing,\r\n      classPrefix,\r\n      ariaLabelClear,\r\n      onSearch,\r\n      onResults = () => {},\r\n      onSubmit = () => {},\r\n      onOpened = () => {},\r\n      onReset = () => {},\r\n      onRender = () => {},\r\n      onClose = () => {},\r\n      noResults = () => {},\r\n      onSelectedItem = () => {},\r\n    }\r\n  ) {\r\n    this._id = element;\r\n    this._root = document.getElementById(element);\r\n    this._onSearch = isPromise(onSearch)\r\n      ? onSearch\r\n      : ({ currentValue, element }) =>\r\n          Promise.resolve(onSearch({ currentValue, element }));\r\n    this._onResults = onResults;\r\n    this._onRender = onRender;\r\n    this._onSubmit = onSubmit;\r\n    this._onSelected = onSelectedItem;\r\n    this._onOpened = onOpened;\r\n    this._onReset = onReset;\r\n    this._noResults = noResults;\r\n    this._onClose = onClose;\r\n\r\n    this._delay = delay;\r\n    this._characters = howManyCharacters;\r\n    this._clearButton = clearButton;\r\n    this._selectFirst = selectFirst;\r\n    this._toInput = insertToInput;\r\n    this._showAll = showAllValues;\r\n    this._classGroup = classGroup;\r\n    this._prevClosing = classPreventClosing;\r\n    this._clearBtnAriLabel = ariaLabelClear\r\n      ? ariaLabelClear\r\n      : \"clear the search query\";\r\n    this._prefix = classPrefix ? `${classPrefix}-auto` : \"auto\";\r\n    this._disable = disableCloseOnSelect;\r\n\r\n    // default config\r\n    this._cache = cache;\r\n    this._outputUl = `${this._prefix}-${this._id}-results`;\r\n    this._cacheData = `data-cache-auto-${this._id}`;\r\n    this._isLoading = `${this._prefix}-is-loading`;\r\n    this._isActive = `${this._prefix}-is-active`;\r\n    this._activeList = `${this._prefix}-selected`;\r\n    this._selectedOption = `${this._prefix}-selected-option`;\r\n    this._err = `${this._prefix}-error`;\r\n    this._regex = /[|\\\\{}()[\\]^$+*?.]/g;\r\n    this._timeout = null;\r\n\r\n    this._resultWrap = createElement(\"div\");\r\n    this._resultList = createElement(\"ul\");\r\n    this._cBtn = createElement(\"button\");\r\n\r\n    this._initial();\r\n  }\r\n\r\n  /**\r\n   * Initial function\r\n   */\r\n  _initial = () => {\r\n    this._clearbutton();\r\n\r\n    output(\r\n      this._root,\r\n      this._resultList,\r\n      this._outputUl,\r\n      this._resultWrap,\r\n      this._prefix\r\n    );\r\n\r\n    // default aria\r\n    // this.reset();\r\n    this._root.addEventListener(\"input\", this._handleInput);\r\n\r\n    // show all values on click root input\r\n    this._showAll && this._root.addEventListener(\"click\", this._handleInput);\r\n\r\n    // calback functions\r\n    this._onRender({\r\n      element: this._root,\r\n      results: this._resultList,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Actions on input\r\n   *\r\n   * @param {String} type - set attribute depending on type\r\n   * @param {String} target\r\n   */\r\n  _cacheAct = (type, target) => {\r\n    if (!this._cache) return;\r\n\r\n    if (type === \"update\") {\r\n      this._root.setAttribute(this._cacheData, target.value);\r\n    } else if (type === \"remove\") {\r\n      this._root.removeAttribute(this._cacheData);\r\n    } else {\r\n      this._root.value = this._root.getAttribute(this._cacheData);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle input\r\n   *\r\n   * @param {Event} object\r\n   */\r\n  _handleInput = ({ target, type }) => {\r\n    if (\r\n      this._root.getAttribute(\"aria-expanded\") === \"true\" &&\r\n      type === \"click\"\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // replace all special characters\r\n    const regex = target.value.replace(this._regex, \"\\\\$&\");\r\n\r\n    // update data attribute cache\r\n    this._cacheAct(\"update\", target);\r\n\r\n    const delay = this._showAll ? 0 : this._delay;\r\n    // clear timeout\r\n    clearTimeout(this._timeout);\r\n    this._timeout = setTimeout(() => {\r\n      this._searchItem(regex.trim());\r\n    }, delay);\r\n  };\r\n\r\n  /**\r\n   * Default aria\r\n   */\r\n  _reset = () => {\r\n    // set attributes to root - input\r\n    setAttributes(this._root, {\r\n      \"aria-owns\": `${this._id}-list`,\r\n      \"aria-expanded\": \"false\",\r\n      \"aria-autocomplete\": \"list\",\r\n      \"aria-activedescendant\": \"\",\r\n      role: \"combobox\",\r\n      removeClass: \"auto-expanded\",\r\n    });\r\n\r\n    // remove class isActive\r\n    this._resultWrap.classList.remove(this._isActive);\r\n\r\n    // move the view item to the first item\r\n    // this.resultList.scrollTop = 0;\r\n    // scrollResultsToTop(this.resultList, this.resultWrap);\r\n\r\n    // remove result when lengh = 0 and insertToInput is false\r\n    if ((this._matches?.length == 0 && !this._toInput) || this._showAll) {\r\n      this._resultList.innerHTML = \"\";\r\n    }\r\n\r\n    // set index\r\n    this._index = this._selectFirst ? 0 : -1;\r\n\r\n    // callback function\r\n    this._onClose();\r\n  };\r\n\r\n  /**\r\n   * The async function gets the text from the search\r\n   * and returns the matching array\r\n   *\r\n   * @param {String} value\r\n   */\r\n  _searchItem = (value) => {\r\n    this._value = value;\r\n\r\n    // if searching show loading icon\r\n    this._onLoading(true);\r\n\r\n    // hide button clear\r\n    showBtnToClearData(this._cBtn, this.destroy);\r\n\r\n    // if there is no value and clearButton is true\r\n    if (value.length == 0 && this._clearButton) {\r\n      this._cBtn.classList.add(\"hidden\");\r\n    }\r\n\r\n    // if declare characters more then value.len and showAll is false\r\n    // remove class isActive\r\n    if (this._characters > value.length && !this._showAll) {\r\n      this._onLoading();\r\n      return;\r\n    }\r\n\r\n    // callblack function onSearch\r\n    this._onSearch({ currentValue: value, element: this._root })\r\n      .then((result) => {\r\n        const rootValueLength = this._root.value.length;\r\n        const resultLength = result.length;\r\n        // set no result\r\n        this._matches = Array.isArray(result)\r\n          ? [...result]\r\n          : JSON.parse(JSON.stringify(result));\r\n\r\n        this._onLoading();\r\n        this._error();\r\n\r\n        // if use destroy() method\r\n        if (resultLength == 0 && rootValueLength == 0) {\r\n          this._cBtn.classList.add(\"hidden\");\r\n        }\r\n\r\n        if (resultLength == 0 && rootValueLength) {\r\n          this._root.classList.remove(\"auto-expanded\");\r\n          this._reset();\r\n          this._noResults({\r\n            element: this._root,\r\n            currentValue: value,\r\n            template: this._results,\r\n          });\r\n          this._events();\r\n        } else if (resultLength > 0 || isObject(result)) {\r\n          this._index = this._selectFirst ? 0 : -1;\r\n          this._results();\r\n          this._events();\r\n        }\r\n      })\r\n      .catch(() => {\r\n        this._onLoading();\r\n        this._reset();\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Set or remove loading class\r\n   *\r\n   * @param {Boolean} type\r\n   */\r\n  _onLoading = (type) =>\r\n    this._root.parentNode.classList[type ? \"add\" : \"remove\"](this._isLoading);\r\n\r\n  /**\r\n   * Set error class to the root element\r\n   */\r\n  _error = () => this._root.classList.remove(this._err);\r\n\r\n  /**\r\n   * Events\r\n   */\r\n  _events = () => {\r\n    // handle click on keydown [up, down, enter, tab, esc]\r\n    this._root.addEventListener(\"keydown\", this._handleKeys);\r\n\r\n    //\r\n    this._root.addEventListener(\"click\", this._handleShowItems);\r\n\r\n    // temporarily disabled mouseleave\r\n    [\"mousemove\", \"click\"].map((eventType) => {\r\n      this._resultList.addEventListener(eventType, this._handleMouse);\r\n    });\r\n\r\n    // close expanded items\r\n    document.addEventListener(\"click\", this._handleDocClick);\r\n  };\r\n\r\n  /**\r\n   * Results\r\n   *\r\n   * @param {HTMLElement|String} template - html or string returned from the function,\r\n   * look at the example - https://github.com/tomik23/autocomplete/blob/master/docs/js/examples/no-results.js#L30\r\n   */\r\n  _results = (template) => {\r\n    // set attribute to root\r\n    setAttributes(this._root, {\r\n      \"aria-expanded\": \"true\",\r\n      addClass: `${this._prefix}-expanded`,\r\n    });\r\n\r\n    // add all found records to otput ul\r\n    this._resultList.innerHTML =\r\n      this._matches.length === 0\r\n        ? this._onResults({\r\n            currentValue: this._value,\r\n            matches: 0,\r\n            template,\r\n          })\r\n        : this._onResults({\r\n            currentValue: this._value,\r\n            matches: this._matches,\r\n            classGroup: this._classGroup,\r\n          });\r\n\r\n    this._resultWrap.classList.add(this._isActive);\r\n\r\n    const checkIfClassGroupExist = this._classGroup\r\n      ? `:not(.${this._classGroup})`\r\n      : \"\";\r\n\r\n    this._itemsLi = document.querySelectorAll(\r\n      `#${this._outputUl} > li${checkIfClassGroupExist}`\r\n    );\r\n\r\n    // adding role, tabindex and aria\r\n    addAriaToAllLiElements(this._itemsLi);\r\n\r\n    // action on open results\r\n    this._onOpened({\r\n      type: \"results\",\r\n      element: this._root,\r\n      results: this._resultList,\r\n    });\r\n\r\n    // select first element\r\n    this._selectFirstEl();\r\n\r\n    // move the view item to the first item\r\n    // this.resultList.scrollTop = 0;\r\n    scrollResultsToTop(this._resultList, this._resultWrap);\r\n  };\r\n\r\n  /**\r\n   * Hangle click on document\r\n   *\r\n   * @param {Event} object\r\n   */\r\n  _handleDocClick = ({ target }) => {\r\n    let disableClose = null;\r\n\r\n    // if 'target' is a ul and 'disableCloseOnSelect'\r\n    // is a 'true' set 'disableClose' on true\r\n    if (\r\n      (target.closest(\"ul\") && this._disable) ||\r\n      // when class classDisableClose\r\n      // then do not not close results\r\n      target.closest(`.${this._prevClosing}`)\r\n    ) {\r\n      disableClose = true;\r\n    }\r\n\r\n    if (target.id !== this._id && !disableClose) {\r\n      this._reset();\r\n      return;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Select first element\r\n   */\r\n  _selectFirstEl = () => {\r\n    this._remAria(document.querySelector(`.${this._activeList}`));\r\n\r\n    if (!this._selectFirst) {\r\n      return;\r\n    }\r\n\r\n    const { firstElementChild } = this._resultList;\r\n\r\n    const classSelectFirst =\r\n      this._classGroup && this._matches.length > 0 && this._selectFirst\r\n        ? firstElementChild.nextElementSibling\r\n        : firstElementChild;\r\n\r\n    // calback function onSelect when first element is true\r\n    this._onSelected({\r\n      index: this._index,\r\n      element: this._root,\r\n      object: this._matches[this._index],\r\n    });\r\n\r\n    // set attribute to first element\r\n    setAttributes(classSelectFirst, {\r\n      id: `${this._selectedOption}-0`,\r\n      addClass: this._activeList,\r\n      \"aria-selected\": \"true\",\r\n    });\r\n\r\n    // set aria active descendant\r\n    setAriaActivedescendant(this._root, `${this._selectedOption}-0`);\r\n  };\r\n\r\n  /**\r\n   * show items when items.length > 0 and is not empty\r\n   */\r\n  _handleShowItems = () => {\r\n    // if resultWrap is not active and resultList is not empty\r\n    if (\r\n      this._resultList.textContent.length > 0 &&\r\n      !this._resultWrap.classList.contains(this._isActive)\r\n    ) {\r\n      // set attribute to root\r\n      setAttributes(this._root, {\r\n        \"aria-expanded\": \"true\",\r\n        addClass: `${this._prefix}-expanded`,\r\n      });\r\n\r\n      // add isActive class to resultWrap\r\n      this._resultWrap.classList.add(this._isActive);\r\n\r\n      // move the view item to the first item\r\n      // this.resultList.scrollTop = 0;\r\n      scrollResultsToTop(this._resultList, this._resultWrap);\r\n\r\n      // select first element\r\n      this._selectFirstEl();\r\n\r\n      // callback function\r\n      this._onOpened({\r\n        type: \"showItems\",\r\n        element: this._root,\r\n        results: this._resultList,\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Adding text from the list when li is clicking\r\n   * or adding aria-selected to li elements\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  _handleMouse = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { target, type } = event;\r\n    const targetClosest = target.closest(\"li\");\r\n    const targetClosestRole = targetClosest?.hasAttribute(\"role\");\r\n    const activeClass = this._activeList;\r\n    const activeClassElement = document.querySelector(`.${activeClass}`);\r\n\r\n    if (!targetClosest || !targetClosestRole) {\r\n      return;\r\n    }\r\n\r\n    // click on li get element\r\n    if (type === \"click\") {\r\n      // get text from clicked li\r\n      this._getTextFromLi(targetClosest);\r\n    }\r\n\r\n    if (\r\n      type === \"mousemove\" &&\r\n      !targetClosest.classList.contains(activeClass)\r\n    ) {\r\n      this._remAria(activeClassElement);\r\n\r\n      // add aria to li\r\n      this._setAria(targetClosest);\r\n      this._index = this._indexLiSelected(targetClosest);\r\n\r\n      this._onSelected({\r\n        index: this._index,\r\n        element: this._root,\r\n        object: this._matches[this._index],\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get text from li on enter or click\r\n   *\r\n   * @param {HTMLElement} element\r\n   */\r\n  _getTextFromLi = (element) => {\r\n    if (!element || this._matches.length === 0) {\r\n      // set default settings\r\n      !this._disable && this._reset();\r\n\r\n      return;\r\n    }\r\n\r\n    // get first element from li and set it to root\r\n    getFirstElementFromLiAndAddToInput(element, this._root);\r\n\r\n    // onSubmit passing text to function\r\n    this._onSubmit({\r\n      index: this._index,\r\n      element: this._root,\r\n      object: this._matches[this._index],\r\n      results: this._resultList,\r\n    });\r\n\r\n    // set default settings\r\n    if (!this._disable) {\r\n      this._remAria(element);\r\n      this._reset();\r\n    }\r\n\r\n    // show clearBtn when select element\r\n    this._clearButton && this._cBtn.classList.remove(\"hidden\");\r\n\r\n    // remove cache\r\n    this._cacheAct(\"remove\");\r\n  };\r\n\r\n  /**\r\n   * Return which li element was selected\r\n   * by hovering the mouse over\r\n   *\r\n   * @param {HTMLElement} target\r\n   * @returns {Number}\r\n   */\r\n  _indexLiSelected = (target) =>\r\n    // get index of li element\r\n    Array.prototype.indexOf.call(this._itemsLi, target);\r\n\r\n  /**\r\n   * Navigating the elements li and enter\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  _handleKeys = (event) => {\r\n    const { keyCode } = event;\r\n\r\n    const resultList = this._resultWrap.classList.contains(this._isActive);\r\n\r\n    const matchesLength = this._matches.length + 1;\r\n    this._selectedLi = document.querySelector(`.${this._activeList}`);\r\n\r\n    // switch between keys\r\n    switch (keyCode) {\r\n      case keyCodes.UP:\r\n      case keyCodes.DOWN:\r\n        // Wrong cursor position in the input field #62\r\n        // Prevents the cursor from moving to the beginning\r\n        // of input as the cursor hovers over the results.\r\n        event.preventDefault();\r\n\r\n        if ((matchesLength <= 1 && this._selectFirst) || !resultList) {\r\n          return;\r\n        }\r\n\r\n        // if keyCode is up\r\n        if (keyCode === keyCodes.UP) {\r\n          if (this._index < 0) {\r\n            this._index = matchesLength - 1;\r\n          }\r\n          this._index -= 1;\r\n        } else {\r\n          this._index += 1;\r\n          if (this._index >= matchesLength) {\r\n            this._index = 0;\r\n          }\r\n        }\r\n\r\n        // remove aria-selected\r\n        this._remAria(this._selectedLi);\r\n\r\n        if (\r\n          matchesLength > 0 &&\r\n          this._index >= 0 &&\r\n          this._index < matchesLength - 1\r\n        ) {\r\n          // callback function\r\n          this._onSelected({\r\n            index: this._index,\r\n            element: this._root,\r\n            object: this._matches[this._index],\r\n          });\r\n\r\n          // set aria-selected\r\n          this._setAria(this._itemsLi[this._index]);\r\n          if (this._toInput && resultList) {\r\n            getFirstElementFromLiAndAddToInput(\r\n              this._itemsLi[this._index],\r\n              this._root\r\n            );\r\n          }\r\n        } else {\r\n          // catch action\r\n          this._cacheAct();\r\n          setAriaActivedescendant(this._root);\r\n        }\r\n\r\n        break;\r\n      // keycode enter\r\n      case keyCodes.ENTER:\r\n        this._getTextFromLi(this._selectedLi);\r\n        break;\r\n\r\n      // keycode escape and keycode tab\r\n      case keyCodes.TAB:\r\n      case keyCodes.ESC:\r\n        event.stopPropagation(); // #120\r\n        this._reset();\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set aria label on item li\r\n   *\r\n   * @param {HTMLElement} target\r\n   */\r\n  _setAria = (target) => {\r\n    const selectedOption = `${this._selectedOption}-${this._indexLiSelected(\r\n      target\r\n    )}`;\r\n\r\n    // set aria to li\r\n    setAttributes(target, {\r\n      id: selectedOption,\r\n      \"aria-selected\": \"true\",\r\n      addClass: this._activeList,\r\n    });\r\n\r\n    setAriaActivedescendant(this._root, selectedOption);\r\n\r\n    // scrollIntoView when press up/down arrows\r\n    followActiveElement(\r\n      target,\r\n      this._outputUl,\r\n      this._classGroup,\r\n      this._resultList\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Remove aria label from item li\r\n   *\r\n   * @param {HTMLElement} element\r\n   */\r\n  _remAria = (element) => {\r\n    if (!element) return;\r\n\r\n    // remove aria from li\r\n    setAttributes(element, {\r\n      id: \"\",\r\n      removeClass: this._activeList,\r\n      \"aria-selected\": \"false\",\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Create clear button and\r\n   * removing text from the input field\r\n   */\r\n  _clearbutton = () => {\r\n    // stop when clear button is disabled\r\n    if (!this._clearButton) return;\r\n\r\n    // add aria to clear button\r\n    setAttributes(this._cBtn, {\r\n      class: `${this._prefix}-clear hidden`,\r\n      type: \"button\",\r\n      title: this._clearBtnAriLabel,\r\n      \"aria-label\": this._clearBtnAriLabel,\r\n    });\r\n\r\n    // insert clear button after input - root\r\n    this._root.insertAdjacentElement(\"afterend\", this._cBtn);\r\n  };\r\n\r\n  /**\r\n   * Clicking on the clear button\r\n   * publick destroy method\r\n   */\r\n  destroy = () => {\r\n    // if clear button is true then add class hidden\r\n    this._clearButton && this._cBtn.classList.add(\"hidden\");\r\n    // clear value searchId\r\n    this._root.value = \"\";\r\n    // set focus\r\n    this._root.focus();\r\n    // remove li from ul\r\n    this._resultList.textContent = \"\";\r\n    // set default aria\r\n    this._reset();\r\n    // remove error if exist\r\n    this._error();\r\n\r\n    // callback function\r\n    this._onReset(this._root);\r\n\r\n    // remove listener\r\n    this._root.removeEventListener(\"keydown\", this._handleKeys);\r\n    this._root.removeEventListener(\"click\", this._handleShowItems);\r\n    // remove listener on click on document\r\n    document.removeEventListener(\"click\", this._handleDocClick);\r\n  };\r\n}\r\n"],"names":["setAttributes","el","object","key","classList","add","remove","setAttribute","getFirstElementFromLiAndAddToInput","element","root","value","firstElementChild","getFirstElement","textContent","trim","scrollResultsToTop","resultList","resultWrap","scrollTop","offsetTop","offsetHeight","setAriaActivedescendant","type","followActiveElement","target","outputUl","classGroup","previusElement","previousSibling","previusElementHeight","getAttribute","allLi","document","querySelectorAll","height","slice","call","map","getClassGroupHeight","offsetBottom","createElement","keyCodes","constructor","delay","clearButton","howManyCharacters","selectFirst","insertToInput","showAllValues","cache","disableCloseOnSelect","classPreventClosing","classPrefix","ariaLabelClear","onSearch","onResults","onSubmit","onOpened","onReset","onRender","onClose","noResults","onSelectedItem","_initial","prefix","_clearbutton","this","_root","_resultList","_outputUl","_resultWrap","_prefix","id","tabIndex","role","addClass","insertAdjacentElement","parentNode","insertBefore","nextSibling","addEventListener","_handleInput","_showAll","_onRender","results","_cacheAct","_cache","_cacheData","removeAttribute","_ref2","regex","replace","_regex","_delay","clearTimeout","_timeout","setTimeout","_searchItem","_reset","_id","removeClass","_isActive","_matches","length","_toInput","innerHTML","_index","_selectFirst","_onClose","_value","_onLoading","destroy","showBtnToClearData","_cBtn","_clearButton","_characters","_onSearch","currentValue","then","result","rootValueLength","resultLength","Array","isArray","JSON","parse","stringify","_error","_noResults","template","_results","_events","Object","isObject","catch","_isLoading","_err","_handleKeys","_handleShowItems","eventType","_handleMouse","_handleDocClick","_onResults","matches","_classGroup","checkIfClassGroupExist","_itemsLi","itemsLi","i","tabindex","addAriaToAllLiElements","_onOpened","_selectFirstEl","_ref3","disableClose","closest","_disable","_prevClosing","_remAria","querySelector","_activeList","classSelectFirst","nextElementSibling","_onSelected","index","_selectedOption","contains","event","preventDefault","targetClosest","targetClosestRole","hasAttribute","activeClass","activeClassElement","_getTextFromLi","_setAria","_indexLiSelected","_onSubmit","prototype","indexOf","keyCode","matchesLength","_selectedLi","stopPropagation","selectedOption","class","title","_clearBtnAriLabel","focus","_onReset","removeEventListener","getElementById","Boolean","_ref4","Promise","resolve"],"mappings":"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"}