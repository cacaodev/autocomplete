{"version":3,"file":"autocomplete.min.js","sources":["../../sources/js/utils/function.js","../../sources/js/utils/keyCodes.js","../../sources/js/script.js"],"sourcesContent":["/**\r\n * Check is a Object\r\n * @param {Object} value\r\n * @returns {Boolean}\r\n */\r\nconst isObject = (value) =>\r\n  value && typeof value === \"object\" && value.constructor === Object;\r\n\r\n/**\r\n * Check if is a Promise\r\n * https://stackoverflow.com/a/53955664/10424385\r\n *\r\n * @param {Object} value\r\n * @returns {Boolean}\r\n */\r\nconst isPromise = (value) => Boolean(value && typeof value.then === \"function\");\r\n\r\n/**\r\n * Set attributes to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {Object} object\r\n */\r\nconst setAttributes = (el, object) => {\r\n  for (let key in object) {\r\n    if (key === \"addClass\") {\r\n      classList(el, \"add\", object[key]);\r\n    } else if (key === \"removeClass\") {\r\n      classList(el, \"remove\", object[key]);\r\n    } else {\r\n      el.setAttribute(key, object[key]);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Get first element from child\r\n *\r\n * @param {HTMLElement} element\r\n * @returns {HTMLELement}\r\n */\r\nconst getFirstElement = (element) =>\r\n  (element.firstElementChild || element).textContent.trim();\r\n\r\n/**\r\n * Scroll to top result-list\r\n * @param {HTMLElement} resultList\r\n * @param {HTMLElement} resultWrap\r\n */\r\nconst scrollResultsToTop = (resultList, resultWrap) => {\r\n  // if there is an overflow of ul element, after\r\n  // opening we always move ul to the top of the results\r\n  resultList.scrollTop = resultList.offsetTop - resultWrap.offsetHeight;\r\n};\r\n\r\n/**\r\n * Adding role, tabindex, aria and call handleMouse\r\n *\r\n * @param {HTMLElement} itemsLi\r\n */\r\nconst addAriaToAllLiElements = (itemsLi) => {\r\n  // add role to all li elements\r\n  for (let i = 0; i < itemsLi.length; i++) {\r\n    setAttributes(itemsLi[i], {\r\n      role: \"option\",\r\n      tabindex: \"-1\",\r\n      \"aria-selected\": \"false\",\r\n      \"aria-setsize\": itemsLi.length,\r\n      \"aria-posinset\": i,\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Show btn to clear data\r\n *\r\n * @param {HTMLElement} clearButton - button to clear data\r\n * @param {Function} destroy - destroy function\r\n */\r\nconst showBtnToClearData = (clearButton = false, destroy) => {\r\n  if (!clearButton) return;\r\n\r\n  classList(clearButton, \"remove\", \"hidden\");\r\n  // add event to clear button\r\n  onEvent(clearButton, \"click\", destroy);\r\n};\r\n\r\n/**\r\n * ClassList add/remove/contains\r\n *\r\n * @param {HTMLElement} element - html element\r\n * @param {String} action - add/remove/contains\r\n * @param {String} className - class name\r\n */\r\nconst classList = (element, action, className) =>\r\n  element.classList[action](className);\r\n\r\n/**\r\n * Set aria-activedescendant\r\n *\r\n * @param {HTMLElement} root - search input\r\n * @param {String} type\r\n */\r\nconst setAriaActivedescendant = (root, type) => {\r\n  setAttributes(root, {\r\n    \"aria-activedescendant\": type || \"\",\r\n  });\r\n};\r\n\r\n/**\r\n * Get height of ul without group class\r\n *\r\n * @param {String} outputUl\r\n * @param {String} classGroup\r\n * @returns {Number}\r\n */\r\nconst getClassGroupHeight = (outputUl, classGroup) => {\r\n  // get height of ul without group class\r\n  const allLiElements = document.querySelectorAll(\r\n    `#${outputUl} > li:not(.${classGroup})`\r\n  );\r\n  let height = 0;\r\n  [].slice.call(allLiElements).map((el) => (height += el.offsetHeight));\r\n\r\n  // return height\r\n  return height;\r\n};\r\n\r\n/**\r\n * Scroll into view when press up/down arrows\r\n *\r\n * @param {HTMLElement} target\r\n * @param {HTMLElement} outputUl\r\n * @param {String} classGroup\r\n * @param {HTMLElement} resultList\r\n */\r\nconst followActiveElement = (target, outputUl, classGroup, resultList) => {\r\n  const previusElement = resultList.previousSibling;\r\n\r\n  const previusElementHeight = previusElement ? previusElement.offsetHeight : 0;\r\n\r\n  if (target.getAttribute(\"aria-posinset\") == \"0\") {\r\n    resultList.scrollTop =\r\n      target.offsetTop - getClassGroupHeight(outputUl, classGroup);\r\n  }\r\n\r\n  if (target.offsetTop - previusElementHeight < resultList.scrollTop) {\r\n    resultList.scrollTop = target.offsetTop - previusElementHeight;\r\n  } else {\r\n    const offsetBottom =\r\n      target.offsetTop + target.offsetHeight - previusElementHeight;\r\n    const scrollBottom = resultList.scrollTop + resultList.offsetHeight;\r\n    if (offsetBottom > scrollBottom) {\r\n      resultList.scrollTop = offsetBottom - resultList.offsetHeight;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Create output-list and put after search input\r\n *\r\n * @param {HTMLElement} root - search input\r\n * @param {HTMLElement} resultList - output-list ul\r\n * @param {String} outputUl - id name of output-list\r\n * @param {HTMLElement} resultWrap - wrapper ul element\r\n * @param {String} prefix - add prefix to all class auto\r\n */\r\nconst output = (root, resultList, outputUl, resultWrap, prefix) => {\r\n  // set attribute to results-list\r\n  setAttributes(resultList, {\r\n    id: outputUl,\r\n    tabIndex: \"0\",\r\n    role: \"listbox\",\r\n  });\r\n\r\n  // add class to wrap element\r\n  setAttributes(resultWrap, {\r\n    addClass: `${prefix}-results-wrapper`,\r\n  });\r\n\r\n  // insert the results into the wrap element\r\n  resultWrap.insertAdjacentElement(\"beforeend\", resultList);\r\n\r\n  // insert the wrap element after the search input\r\n  root.parentNode.insertBefore(resultWrap, root.nextSibling);\r\n};\r\n\r\n/**\r\n * Create element\r\n *\r\n * @param {String} type - type of element\r\n * @returns {HTMLDivElement}\r\n */\r\nconst createElement = (type) => document.createElement(type);\r\n\r\n/**\r\n * Get element\r\n *\r\n * @param {String} element\r\n * @returns {HTMLElement}\r\n */\r\nconst select = (element) => document.querySelector(element);\r\n\r\n/**\r\n * Event listeners\r\n *\r\n * @param {HTMLElement} element\r\n * @param {String} action\r\n * @param {Function} callback\r\n */\r\nconst onEvent = (element, action, callback) => {\r\n  element.addEventListener(action, callback);\r\n};\r\n\r\n/**\r\n * Remove event listeners\r\n */\r\nconst offEvent = (element, action, callback) => {\r\n  element.removeEventListener(action, callback);\r\n};\r\n\r\nexport {\r\n  addAriaToAllLiElements,\r\n  classList,\r\n  createElement,\r\n  followActiveElement,\r\n  getFirstElement,\r\n  isObject,\r\n  isPromise,\r\n  offEvent,\r\n  onEvent,\r\n  output,\r\n  scrollResultsToTop,\r\n  select,\r\n  setAriaActivedescendant,\r\n  setAttributes,\r\n  showBtnToClearData,\r\n};\r\n","/**\r\n * Key codes\r\n */\r\nconst keyCodes = {\r\n  ESC: 27,\r\n  ENTER: 13,\r\n  UP: 38,\r\n  DOWN: 40,\r\n  TAB: 9,\r\n};\r\n\r\nexport default keyCodes;\r\n","import {\r\n  addAriaToAllLiElements,\r\n  classList,\r\n  createElement,\r\n  followActiveElement,\r\n  getFirstElement,\r\n  isObject,\r\n  isPromise,\r\n  offEvent,\r\n  onEvent,\r\n  output,\r\n  scrollResultsToTop,\r\n  select,\r\n  setAriaActivedescendant,\r\n  setAttributes,\r\n  showBtnToClearData,\r\n} from \"./utils/function\";\r\n\r\nimport keyCodes from \"./utils/keyCodes\";\r\n\r\n/**\r\n * @class Autocomplete\r\n */\r\nexport default class Autocomplete {\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {String} element\r\n   * @param {Object} object\r\n   */\r\n  constructor(\r\n    element,\r\n    {\r\n      delay = 500,\r\n      clearButton = true,\r\n      howManyCharacters = 1,\r\n      selectFirst = false,\r\n      insertToInput = false,\r\n      showAllValues = false,\r\n      cache = false,\r\n      disableCloseOnSelect = false,\r\n      classGroup,\r\n      classPreventClosing,\r\n      classPrefix,\r\n      ariaLabelClear,\r\n      onSearch,\r\n      onResults = () => {},\r\n      onSubmit = () => {},\r\n      onOpened = () => {},\r\n      onReset = () => {},\r\n      onRender = () => {},\r\n      onClose = () => {},\r\n      noResults = () => {},\r\n      onSelectedItem = () => {},\r\n    }\r\n  ) {\r\n    this._id = element;\r\n    this._root = document.getElementById(element);\r\n    this._onSearch = isPromise(onSearch)\r\n      ? onSearch\r\n      : ({ currentValue, element }) =>\r\n          Promise.resolve(onSearch({ currentValue, element }));\r\n    this._onResults = onResults;\r\n    this._onRender = onRender;\r\n    this._onSubmit = onSubmit;\r\n    this._onSelected = onSelectedItem;\r\n    this._onOpened = onOpened;\r\n    this._onReset = onReset;\r\n    this._noResults = noResults;\r\n    this._onClose = onClose;\r\n\r\n    this._delay = delay;\r\n    this._characters = howManyCharacters;\r\n    this._clearButton = clearButton;\r\n    this._selectFirst = selectFirst;\r\n    this._toInput = insertToInput;\r\n    this._showAll = showAllValues;\r\n    this._classGroup = classGroup;\r\n    this._prevClosing = classPreventClosing;\r\n    this._clearBtnAriLabel = ariaLabelClear\r\n      ? ariaLabelClear\r\n      : \"clear the search query\";\r\n    this._prefix = classPrefix ? `${classPrefix}-auto` : \"auto\";\r\n    this._disable = disableCloseOnSelect;\r\n\r\n    // default config\r\n    this._cache = cache;\r\n    this._outputUl = `${this._prefix}-${this._id}-results`;\r\n    this._cacheData = `data-cache-auto-${this._id}`;\r\n    this._isLoading = `${this._prefix}-is-loading`;\r\n    this._isActive = `${this._prefix}-is-active`;\r\n    this._activeList = `${this._prefix}-selected`;\r\n    this._selectedOption = `${this._prefix}-selected-option`;\r\n    this._err = `${this._prefix}-error`;\r\n    this._regex = /[|\\\\{}()[\\]^$+*?.]/g;\r\n    this._timeout = null;\r\n\r\n    this._resultWrap = createElement(\"div\");\r\n    this._resultList = createElement(\"ul\");\r\n    this._clearBtn = createElement(\"button\");\r\n\r\n    this._initial();\r\n  }\r\n\r\n  /**\r\n   * Initial function\r\n   */\r\n  _initial = () => {\r\n    this._clearbutton();\r\n\r\n    output(\r\n      this._root,\r\n      this._resultList,\r\n      this._outputUl,\r\n      this._resultWrap,\r\n      this._prefix\r\n    );\r\n\r\n    // default aria\r\n    onEvent(this._root, \"input\", this._handleInput);\r\n\r\n    // show all values on click root input\r\n    this._showAll && onEvent(this._root, \"click\", this._handleInput);\r\n\r\n    // calback functions\r\n    this._onRender({\r\n      element: this._root,\r\n      results: this._resultList,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Actions on input\r\n   *\r\n   * @param {String} type - set attribute depending on type\r\n   * @param {String} target\r\n   */\r\n  _cacheAct = (type, target) => {\r\n    if (!this._cache) return;\r\n\r\n    if (type === \"update\") {\r\n      this._root.setAttribute(this._cacheData, target.value);\r\n    } else if (type === \"remove\") {\r\n      this._root.removeAttribute(this._cacheData);\r\n    } else {\r\n      this._root.value = this._root.getAttribute(this._cacheData);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle input\r\n   *\r\n   * @param {Event} object\r\n   */\r\n  _handleInput = ({ target, type }) => {\r\n    if (\r\n      this._root.getAttribute(\"aria-expanded\") === \"true\" &&\r\n      type === \"click\"\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // replace all special characters\r\n    const regex = target.value.replace(this._regex, \"\\\\$&\");\r\n\r\n    // update data attribute cache\r\n    this._cacheAct(\"update\", target);\r\n\r\n    const delay = this._showAll ? 0 : this._delay;\r\n    // clear timeout\r\n    clearTimeout(this._timeout);\r\n    this._timeout = setTimeout(() => {\r\n      this._searchItem(regex.trim());\r\n    }, delay);\r\n  };\r\n\r\n  /**\r\n   * Default aria\r\n   */\r\n  _reset = () => {\r\n    // set attributes to root - input\r\n    setAttributes(this._root, {\r\n      \"aria-owns\": `${this._id}-list`,\r\n      \"aria-expanded\": \"false\",\r\n      \"aria-autocomplete\": \"list\",\r\n      \"aria-activedescendant\": \"\",\r\n      role: \"combobox\",\r\n      removeClass: \"auto-expanded\",\r\n    });\r\n\r\n    // remove class isActive\r\n    classList(this._resultWrap, \"remove\", this._isActive);\r\n\r\n    // set index\r\n    this._index = this._selectFirst ? 0 : -1;\r\n\r\n    // callback function\r\n    this._onClose();\r\n  };\r\n\r\n  /**\r\n   * The async function gets the text from the search\r\n   * and returns the matching array\r\n   *\r\n   * @param {String} value\r\n   */\r\n  _searchItem = (value) => {\r\n    this._value = value;\r\n\r\n    // if searching show loading icon\r\n    this._onLoading(true);\r\n\r\n    // hide button clear\r\n    showBtnToClearData(this._clearBtn, this.destroy);\r\n\r\n    // if there is no value and clearButton is true\r\n    if (value.length == 0 && this._clearButton) {\r\n      classList(this._clearBtn, \"add\", \"hidden\");\r\n    }\r\n\r\n    // if declare characters more then value.len and showAll is false\r\n    // remove class isActive\r\n    if (this._characters > value.length && !this._showAll) {\r\n      this._onLoading();\r\n      return;\r\n    }\r\n\r\n    // callblack function onSearch\r\n    this._onSearch({ currentValue: value, element: this._root })\r\n      .then((result) => {\r\n        const rootValueLength = this._root.value.length;\r\n        const resultLength = result.length;\r\n        // set no result\r\n        this._matches = Array.isArray(result)\r\n          ? result\r\n          : JSON.parse(JSON.stringify(result));\r\n\r\n        this._onLoading();\r\n        this._error();\r\n\r\n        // if use destroy() method\r\n        if (resultLength == 0 && rootValueLength == 0) {\r\n          classList(this._clearBtn, \"add\", \"hidden\");\r\n        }\r\n\r\n        if (resultLength == 0 && rootValueLength) {\r\n          classList(this._root, \"remove\", \"auto-expanded\");\r\n          this._reset();\r\n          this._noResults({\r\n            element: this._root,\r\n            currentValue: value,\r\n            template: this._results,\r\n          });\r\n          this._events();\r\n        } else if (resultLength > 0 || isObject(result)) {\r\n          this._index = this._selectFirst ? 0 : -1;\r\n          this._results();\r\n          this._events();\r\n        }\r\n      })\r\n      .catch(() => {\r\n        this._onLoading();\r\n        this._reset();\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Set or remove loading class\r\n   *\r\n   * @param {Boolean} type\r\n   */\r\n  _onLoading = (type) =>\r\n    this._root.parentNode.classList[type ? \"add\" : \"remove\"](this._isLoading);\r\n\r\n  /**\r\n   * Set error class to the root element\r\n   */\r\n  _error = () => classList(this._root, \"remove\", this._err);\r\n\r\n  /**\r\n   * Events\r\n   */\r\n  _events = () => {\r\n    // handle click on keydown [up, down, enter, tab, esc]\r\n    onEvent(this._root, \"keydown\", this._handleKeys);\r\n\r\n    onEvent(this._root, \"click\", this._handleShowItems);\r\n\r\n    // temporarily disabled mouseleave\r\n    [\"mousemove\", \"click\"].map((eventType) => {\r\n      onEvent(this._resultList, eventType, this._handleMouse);\r\n    });\r\n\r\n    // close expanded items\r\n    onEvent(document, \"click\", this._handleDocClick);\r\n  };\r\n\r\n  /**\r\n   * Results\r\n   *\r\n   * @param {HTMLElement|String} template - html or string returned from the function,\r\n   * look at the example - https://github.com/tomik23/autocomplete/blob/master/docs/js/examples/no-results.js#L30\r\n   */\r\n  _results = (template) => {\r\n    // set attribute to root\r\n    setAttributes(this._root, {\r\n      \"aria-expanded\": \"true\",\r\n      addClass: `${this._prefix}-expanded`,\r\n    });\r\n\r\n    // clear result list\r\n    this._resultList.textContent = \"\";\r\n\r\n    // add all found records to otput ul\r\n    const dataResults =\r\n      this._matches.length === 0\r\n        ? this._onResults({\r\n            currentValue: this._value,\r\n            matches: 0,\r\n            template,\r\n          })\r\n        : this._onResults({\r\n            currentValue: this._value,\r\n            matches: this._matches,\r\n            classGroup: this._classGroup,\r\n          });\r\n\r\n    // add data to ul\r\n    this._resultList.insertAdjacentHTML(\"afterbegin\", dataResults);\r\n\r\n    // add class isActive\r\n    classList(this._resultWrap, \"add\", this._isActive);\r\n\r\n    const checkIfClassGroupExist = this._classGroup\r\n      ? `:not(.${this._classGroup})`\r\n      : \"\";\r\n\r\n    this._itemsLi = document.querySelectorAll(\r\n      `#${this._outputUl} > li${checkIfClassGroupExist}`\r\n    );\r\n\r\n    // adding role, tabindex and aria\r\n    addAriaToAllLiElements(this._itemsLi);\r\n\r\n    // action on open results\r\n    this._onOpened({\r\n      type: \"results\",\r\n      element: this._root,\r\n      results: this._resultList,\r\n    });\r\n\r\n    // select first element\r\n    this._selectFirstElement();\r\n\r\n    // move the view item to the first item\r\n    // this.resultList.scrollTop = 0;\r\n    scrollResultsToTop(this._resultList, this._resultWrap);\r\n  };\r\n\r\n  /**\r\n   * Hangle click on document\r\n   *\r\n   * @param {Event} object\r\n   */\r\n  _handleDocClick = ({ target }) => {\r\n    let disableClose = null;\r\n\r\n    // if 'target' is a ul and 'disableCloseOnSelect'\r\n    // is a 'true' set 'disableClose' on true\r\n    if (\r\n      (target.closest(\"ul\") && this._disable) ||\r\n      // when class classDisableClose\r\n      // then do not not close results\r\n      target.closest(`.${this._prevClosing}`)\r\n    ) {\r\n      disableClose = true;\r\n    }\r\n\r\n    if (target.id !== this._id && !disableClose) {\r\n      this._reset();\r\n      return;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Select first element\r\n   */\r\n  _selectFirstElement = () => {\r\n    this._removeAria(select(`.${this._activeList}`));\r\n\r\n    if (!this._selectFirst) {\r\n      return;\r\n    }\r\n\r\n    const { firstElementChild } = this._resultList;\r\n\r\n    const classSelectFirst =\r\n      this._classGroup && this._matches.length > 0 && this._selectFirst\r\n        ? firstElementChild.nextElementSibling\r\n        : firstElementChild;\r\n\r\n    // calback function onSelect when first element is true\r\n    this._onSelected({\r\n      index: this._index,\r\n      element: this._root,\r\n      object: this._matches[this._index],\r\n    });\r\n\r\n    // set attribute to first element\r\n    setAttributes(classSelectFirst, {\r\n      id: `${this._selectedOption}-0`,\r\n      addClass: this._activeList,\r\n      \"aria-selected\": \"true\",\r\n    });\r\n\r\n    // set aria active descendant\r\n    setAriaActivedescendant(this._root, `${this._selectedOption}-0`);\r\n  };\r\n\r\n  /**\r\n   * show items when items.length > 0 and is not empty\r\n   */\r\n  _handleShowItems = () => {\r\n    // if resultWrap is not active and resultList is not empty\r\n    if (\r\n      this._resultList.textContent.length > 0 &&\r\n      !classList(this._resultWrap, \"contains\", this._isActive)\r\n    ) {\r\n      // set attribute to root\r\n      setAttributes(this._root, {\r\n        \"aria-expanded\": \"true\",\r\n        addClass: `${this._prefix}-expanded`,\r\n      });\r\n\r\n      // add isActive class to resultWrap\r\n      classList(this._resultWrap, \"add\", this._isActive);\r\n\r\n      // move the view item to the first item\r\n      // this.resultList.scrollTop = 0;\r\n      scrollResultsToTop(this._resultList, this._resultWrap);\r\n\r\n      // select first element\r\n      this._selectFirstElement();\r\n\r\n      // callback function\r\n      this._onOpened({\r\n        type: \"showItems\",\r\n        element: this._root,\r\n        results: this._resultList,\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Adding text from the list when li is clicking\r\n   * or adding aria-selected to li elements\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  _handleMouse = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { target, type } = event;\r\n    const targetClosest = target.closest(\"li\");\r\n    const targetClosestRole = targetClosest?.hasAttribute(\"role\");\r\n    const activeClass = this._activeList;\r\n    const activeClassElement = select(`.${activeClass}`);\r\n\r\n    if (!targetClosest || !targetClosestRole) {\r\n      return;\r\n    }\r\n\r\n    // click on li get element\r\n    if (type === \"click\") {\r\n      // get text from clicked li\r\n      this._getTextFromLi(targetClosest);\r\n    }\r\n\r\n    if (\r\n      type === \"mousemove\" &&\r\n      !classList(targetClosest, \"contains\", activeClass)\r\n    ) {\r\n      this._removeAria(activeClassElement);\r\n\r\n      // add aria to li\r\n      this._setAria(targetClosest);\r\n      this._index = this._indexLiSelected(targetClosest);\r\n\r\n      this._onSelected({\r\n        index: this._index,\r\n        element: this._root,\r\n        object: this._matches[this._index],\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get text from li on enter or click\r\n   *\r\n   * @param {HTMLElement} element\r\n   */\r\n  _getTextFromLi = (element) => {\r\n    if (!element || this._matches.length === 0) {\r\n      // set default settings\r\n      !this._disable && this._reset();\r\n\r\n      return;\r\n    }\r\n\r\n    // get first element from li and set it to root\r\n    this._root.value = getFirstElement(element);\r\n\r\n    // onSubmit passing text to function\r\n    this._onSubmit({\r\n      index: this._index,\r\n      element: this._root,\r\n      object: this._matches[this._index],\r\n      results: this._resultList,\r\n    });\r\n\r\n    // set default settings\r\n    if (!this._disable) {\r\n      this._removeAria(element);\r\n      this._reset();\r\n    }\r\n\r\n    // show clearBtn when select element\r\n    this._clearButton && classList(this._clearBtn, \"remove\", \"hidden\");\r\n\r\n    // remove cache\r\n    this._cacheAct(\"remove\");\r\n  };\r\n\r\n  /**\r\n   * Return which li element was selected\r\n   * by hovering the mouse over\r\n   *\r\n   * @param {HTMLElement} target\r\n   * @returns {Number}\r\n   */\r\n  _indexLiSelected = (target) =>\r\n    // get index of li element\r\n    Array.prototype.indexOf.call(this._itemsLi, target);\r\n\r\n  /**\r\n   * Navigating the elements li and enter\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  _handleKeys = (event) => {\r\n    const { keyCode } = event;\r\n\r\n    const resultList = classList(this._resultWrap, \"contains\", this._isActive);\r\n\r\n    const matchesLength = this._matches.length + 1;\r\n    this._selectedLi = select(`.${this._activeList}`);\r\n\r\n    // switch between keys\r\n    switch (keyCode) {\r\n      case keyCodes.UP:\r\n      case keyCodes.DOWN:\r\n        // Wrong cursor position in the input field #62\r\n        // Prevents the cursor from moving to the beginning\r\n        // of input as the cursor hovers over the results.\r\n        event.preventDefault();\r\n\r\n        if ((matchesLength <= 1 && this._selectFirst) || !resultList) {\r\n          return;\r\n        }\r\n\r\n        // if keyCode is up\r\n        if (keyCode === keyCodes.UP) {\r\n          if (this._index < 0) {\r\n            this._index = matchesLength - 1;\r\n          }\r\n          this._index -= 1;\r\n        } else {\r\n          this._index += 1;\r\n          if (this._index >= matchesLength) {\r\n            this._index = 0;\r\n          }\r\n        }\r\n\r\n        // remove aria-selected\r\n        this._removeAria(this._selectedLi);\r\n\r\n        if (this._index >= 0 && this._index < matchesLength - 1) {\r\n          if (this._toInput && resultList) {\r\n            this._root.value = getFirstElement(this._itemsLi[this._index]);\r\n          }\r\n\r\n          // callback function\r\n          this._onSelected({\r\n            index: this._index,\r\n            element: this._root,\r\n            object: this._matches[this._index],\r\n          });\r\n\r\n          // set aria-selected\r\n          this._setAria(this._itemsLi[this._index]);\r\n        } else {\r\n          // catch action\r\n          this._cacheAct();\r\n          setAriaActivedescendant(this._root);\r\n\r\n          this._onSelected({\r\n            index: null,\r\n            element: this._root,\r\n            object: null,\r\n          });\r\n        }\r\n\r\n        break;\r\n      // keycode enter\r\n      case keyCodes.ENTER:\r\n        this._getTextFromLi(this._selectedLi);\r\n        break;\r\n\r\n      // keycode escape and keycode tab\r\n      case keyCodes.TAB:\r\n      case keyCodes.ESC:\r\n        event.stopPropagation(); // #120\r\n        this._reset();\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set aria label on item li\r\n   *\r\n   * @param {HTMLElement} target\r\n   */\r\n  _setAria = (target) => {\r\n    const selectedOption = `${this._selectedOption}-${this._indexLiSelected(\r\n      target\r\n    )}`;\r\n\r\n    // set aria to li\r\n    setAttributes(target, {\r\n      id: selectedOption,\r\n      \"aria-selected\": \"true\",\r\n      addClass: this._activeList,\r\n    });\r\n\r\n    setAriaActivedescendant(this._root, selectedOption);\r\n\r\n    // scrollIntoView when press up/down arrows\r\n    followActiveElement(\r\n      target,\r\n      this._outputUl,\r\n      this._classGroup,\r\n      this._resultList\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Remove aria label from item li\r\n   *\r\n   * @param {HTMLElement} element\r\n   */\r\n  _removeAria = (element) => {\r\n    if (!element) return;\r\n\r\n    // remove aria from li\r\n    setAttributes(element, {\r\n      id: \"\",\r\n      removeClass: this._activeList,\r\n      \"aria-selected\": \"false\",\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Create clear button and\r\n   * removing text from the input field\r\n   */\r\n  _clearbutton = () => {\r\n    // stop when clear button is disabled\r\n    if (!this._clearButton) return;\r\n\r\n    // add aria to clear button\r\n    setAttributes(this._clearBtn, {\r\n      class: `${this._prefix}-clear hidden`,\r\n      type: \"button\",\r\n      title: this._clearBtnAriLabel,\r\n      \"aria-label\": this._clearBtnAriLabel,\r\n    });\r\n\r\n    // insert clear button after input - root\r\n    this._root.insertAdjacentElement(\"afterend\", this._clearBtn);\r\n  };\r\n\r\n  /**\r\n   * Clicking on the clear button\r\n   * publick destroy method\r\n   */\r\n  destroy = () => {\r\n    // if clear button is true then add class hidden\r\n    this._clearButton && classList(this._clearBtn, \"add\", \"hidden\");\r\n    // clear value searchId\r\n    this._root.value = \"\";\r\n    // set focus\r\n    this._root.focus();\r\n    // remove li from ul\r\n    this._resultList.textContent = \"\";\r\n    // set default aria\r\n    this._reset();\r\n    // remove error if exist\r\n    this._error();\r\n\r\n    // callback function\r\n    this._onReset(this._root);\r\n\r\n    // remove listener\r\n    offEvent(this._root, \"keydown\", this._handleKeys);\r\n    offEvent(this._root, \"click\", this._handleShowItems);\r\n    // remove listener on click on document\r\n    offEvent(document, \"click\", this._handleDocClick);\r\n  };\r\n}\r\n"],"names":["setAttributes","el","object","key","classList","setAttribute","getFirstElement","element","firstElementChild","textContent","trim","scrollResultsToTop","resultList","resultWrap","scrollTop","offsetTop","offsetHeight","action","className","setAriaActivedescendant","root","type","followActiveElement","target","outputUl","classGroup","previusElement","previousSibling","previusElementHeight","getAttribute","allLiElements","document","querySelectorAll","height","slice","call","map","getClassGroupHeight","offsetBottom","createElement","select","querySelector","onEvent","callback","addEventListener","offEvent","removeEventListener","keyCodes","constructor","delay","clearButton","howManyCharacters","selectFirst","insertToInput","showAllValues","cache","disableCloseOnSelect","classPreventClosing","classPrefix","ariaLabelClear","onSearch","onResults","onSubmit","onOpened","onReset","onRender","onClose","noResults","onSelectedItem","value","_initial","prefix","_clearbutton","this","_root","_resultList","_outputUl","_resultWrap","_prefix","id","tabIndex","role","addClass","insertAdjacentElement","parentNode","insertBefore","nextSibling","_handleInput","_showAll","_onRender","results","_cacheAct","_cache","_cacheData","removeAttribute","_ref2","regex","replace","_regex","_delay","clearTimeout","_timeout","setTimeout","_searchItem","_reset","_id","removeClass","_isActive","_index","_selectFirst","_onClose","_value","_onLoading","destroy","showBtnToClearData","_clearBtn","length","_clearButton","_characters","_onSearch","currentValue","then","result","rootValueLength","resultLength","_matches","Array","isArray","JSON","parse","stringify","_error","_noResults","template","_results","_events","Object","isObject","catch","_isLoading","_err","_handleKeys","_handleShowItems","eventType","_handleMouse","_handleDocClick","dataResults","_onResults","matches","_classGroup","insertAdjacentHTML","checkIfClassGroupExist","_itemsLi","itemsLi","i","tabindex","addAriaToAllLiElements","_onOpened","_selectFirstElement","_ref3","disableClose","closest","_disable","_prevClosing","_removeAria","_activeList","classSelectFirst","nextElementSibling","_onSelected","index","_selectedOption","event","preventDefault","targetClosest","targetClosestRole","hasAttribute","activeClass","activeClassElement","_getTextFromLi","_setAria","_indexLiSelected","_onSubmit","prototype","indexOf","keyCode","matchesLength","_selectedLi","_toInput","stopPropagation","selectedOption","class","title","_clearBtnAriLabel","focus","_onReset","getElementById","Boolean","_ref4","Promise","resolve"],"mappings":"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"}