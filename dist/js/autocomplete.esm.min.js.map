{"version":3,"file":"autocomplete.esm.min.js","sources":["../../sources/js/utils/function.js","../../sources/js/utils/keyCodes.js","../../sources/js/script.js"],"sourcesContent":["/**\r\n * Check is a Object\r\n * @param {Object} value\r\n * @returns {Boolean}\r\n */\r\nconst isObject = (value) =>\r\n  value && typeof value === 'object' && value.constructor === Object;\r\n\r\n/**\r\n * Check if is a Promise\r\n * https://stackoverflow.com/a/53955664/10424385\r\n *\r\n * @param {Object} value\r\n * @returns {Boolean}\r\n */\r\nconst isPromise = (value) => Boolean(value && typeof value.then === 'function');\r\n\r\n/**\r\n * Set attributes to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {Object} object\r\n */\r\nconst setAttributes = (el, object) => {\r\n  for (let key in object) {\r\n    if (key === 'addClass') {\r\n      el.classList.add(object[key]);\r\n    } else if (key === 'removeClass') {\r\n      el.classList.remove(object[key]);\r\n    } else {\r\n      el.setAttribute(key, object[key]);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Get first element from child\r\n *\r\n * @param {HTMLElement} element\r\n * @returns {HTMLELement}\r\n */\r\nconst getFirstElement = (element) => element.firstElementChild || element;\r\n\r\n/**\r\n * Set data from li to input\r\n *\r\n * @param {String} element\r\n * @param {HTMLElement} root\r\n * @returns {String}\r\n */\r\nconst getFirstElementFromLiAndAddToInput = (element, root) =>\r\n  // get first element from li and add to input\r\n  (root.value = getFirstElement(element).textContent.trim());\r\n\r\n/**\r\n * Scroll to top result-list\r\n * @param {HTMLElement} resultList\r\n * @param {HTMLElement} resultWrap\r\n */\r\nconst scrollResultsToTop = (resultList, resultWrap) => {\r\n  // if there is an overflow of ul element, after\r\n  // opening we always move ul to the top of the results\r\n  resultList.scrollTop = resultList.offsetTop - resultWrap.offsetHeight;\r\n};\r\n\r\n/**\r\n * Adding role, tabindex, aria and call handleMouse\r\n *\r\n * @param {HTMLElement} itemsLi\r\n */\r\nconst addAriaToAllLiElements = (itemsLi) => {\r\n  // add role to all li elements\r\n  for (let i = 0; i < itemsLi.length; i++) {\r\n    setAttributes(itemsLi[i], {\r\n      role: 'option',\r\n      tabindex: '-1',\r\n      'aria-selected': 'false',\r\n      'aria-setsize': itemsLi.length,\r\n      'aria-posinset': i,\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Show btn to clear data\r\n *\r\n * @param {HTMLElement} clearButton - button to clear data\r\n * @param {Function} destroy - destroy function\r\n */\r\nconst showBtnToClearData = (clearButton = false, destroy) => {\r\n  if (!clearButton) return;\r\n\r\n  clearButton.classList.remove('hidden');\r\n  // add event to clear button\r\n  clearButton.addEventListener('click', destroy);\r\n};\r\n\r\n/**\r\n * Set aria-activedescendant\r\n *\r\n * @param {HTMLElement} root - search input\r\n * @param {String} type\r\n */\r\nconst setAriaActivedescendant = (root, type) => {\r\n  root.setAttribute('aria-activedescendant', type || '');\r\n};\r\n\r\n/**\r\n * Get height of ul without group class\r\n *\r\n * @param {String} outputUl\r\n * @param {String} classGroup\r\n * @returns {Number}\r\n */\r\nconst getClassGroupHeight = (outputUl, classGroup) => {\r\n  // get height of ul without group class\r\n  const allLi = document.querySelectorAll(\r\n    `#${outputUl} > li:not(.${classGroup})`\r\n  );\r\n  let height = 0;\r\n  [].slice.call(allLi).map((el) => (height += el.offsetHeight));\r\n\r\n  // return height\r\n  return height;\r\n};\r\n\r\n/**\r\n * Scroll into view when press up/down arrows\r\n *\r\n * @param {HTMLElement} target\r\n * @param {HTMLElement} outputUl\r\n * @param {String} classGroup\r\n * @param {HTMLElement} resultList\r\n */\r\nconst followActiveElement = (target, outputUl, classGroup, resultList) => {\r\n  const previusElement = resultList.previousSibling;\r\n\r\n  const previusElementHeight = previusElement ? previusElement.offsetHeight : 0;\r\n\r\n  if (target.getAttribute('aria-posinset') == '0') {\r\n    resultList.scrollTop =\r\n      target.offsetTop - getClassGroupHeight(outputUl, classGroup);\r\n  }\r\n\r\n  if (target.offsetTop - previusElementHeight < resultList.scrollTop) {\r\n    resultList.scrollTop = target.offsetTop - previusElementHeight;\r\n  } else {\r\n    const offsetBottom =\r\n      target.offsetTop + target.offsetHeight - previusElementHeight;\r\n    const scrollBottom = resultList.scrollTop + resultList.offsetHeight;\r\n    if (offsetBottom > scrollBottom) {\r\n      resultList.scrollTop = offsetBottom - resultList.offsetHeight;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Create output-list and put after search input\r\n *\r\n * @param {HTMLElement} root - search input\r\n * @param {HTMLElement} resultList - output-list ul\r\n * @param {String} outputUl - id name of output-list\r\n * @param {HTMLElement} resultWrap - wrapper ul element\r\n * @param {String} prefix - add prefix to all class auto\r\n */\r\nconst output = (root, resultList, outputUl, resultWrap, prefix) => {\r\n  // set attribute to results-list\r\n  setAttributes(resultList, {\r\n    id: outputUl,\r\n    tabIndex: '0',\r\n    role: 'listbox',\r\n  });\r\n\r\n  // add class to wrap element\r\n  setAttributes(resultWrap, {\r\n    addClass: `${prefix}-wrapper`,\r\n  });\r\n\r\n  // insert the results into the wrap element\r\n  resultWrap.insertAdjacentElement('beforeend', resultList);\r\n\r\n  // insert the wrap element after the search input\r\n  root.parentNode.insertBefore(resultWrap, root.nextSibling);\r\n};\r\n\r\nexport {\r\n  addAriaToAllLiElements,\r\n  followActiveElement,\r\n  getFirstElementFromLiAndAddToInput,\r\n  isObject,\r\n  isPromise,\r\n  output,\r\n  scrollResultsToTop,\r\n  setAriaActivedescendant,\r\n  setAttributes,\r\n  showBtnToClearData,\r\n};\r\n","/**\r\n * Key codes\r\n */\r\nconst keyCodes = {\r\n  ESC: 27,\r\n  ENTER: 13,\r\n  UP: 38,\r\n  DOWN: 40,\r\n  TAB: 9,\r\n};\r\n\r\nexport default keyCodes;\r\n","import {\r\n  addAriaToAllLiElements,\r\n  followActiveElement,\r\n  getFirstElementFromLiAndAddToInput,\r\n  isObject,\r\n  isPromise,\r\n  output,\r\n  scrollResultsToTop,\r\n  setAriaActivedescendant,\r\n  setAttributes,\r\n  showBtnToClearData,\r\n} from './utils/function';\r\n\r\nimport keyCodes from './utils/keyCodes';\r\n\r\n/**\r\n * @class Autocomplete\r\n */\r\nexport default class Autocomplete {\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {String} element\r\n   * @param {Object} object\r\n   */\r\n  constructor(\r\n    element,\r\n    {\r\n      delay = 500,\r\n      clearButton = true,\r\n      howManyCharacters = 1,\r\n      selectFirst = false,\r\n      insertToInput = false,\r\n      showAllValues = false,\r\n      cache = false,\r\n      disableCloseOnSelect = false,\r\n      classGroup,\r\n      classPreventClosing,\r\n      classPrefix,\r\n      ariaLabelClear,\r\n      onSearch,\r\n      onResults = () => {},\r\n      onSubmit = () => {},\r\n      onOpened = () => {},\r\n      onReset = () => {},\r\n      onRender = () => {},\r\n      onClose = () => {},\r\n      noResults = () => {},\r\n      onSelectedItem = () => {},\r\n    }\r\n  ) {\r\n    this.id = element;\r\n    this.root = document.getElementById(this.id);\r\n    this.onSearch = isPromise(onSearch)\r\n      ? onSearch\r\n      : ({ currentValue, element }) =>\r\n          Promise.resolve(onSearch({ currentValue, element }));\r\n    this.onResults = onResults;\r\n    this.onRender = onRender;\r\n    this.onSubmit = onSubmit;\r\n    this.onSelected = onSelectedItem;\r\n    this.onOpened = onOpened;\r\n    this.onReset = onReset;\r\n    this.noResults = noResults;\r\n    this.onClose = onClose;\r\n\r\n    this.delay = delay;\r\n    this.characters = howManyCharacters;\r\n    this.clearButton = clearButton;\r\n    this.selectFirst = selectFirst;\r\n    this.toInput = insertToInput;\r\n    this.showAll = showAllValues;\r\n    this.classGroup = classGroup;\r\n    this.prevClosing = classPreventClosing;\r\n    this.clearBtnAriLabel = ariaLabelClear\r\n      ? ariaLabelClear\r\n      : 'clear text from input';\r\n    this.prefix = classPrefix ? `${classPrefix}-auto` : 'auto';\r\n    this.disable = disableCloseOnSelect;\r\n\r\n    // default config\r\n    this.cache = cache;\r\n    this.outputUl = `${this.prefix}-${this.id}-results`;\r\n    this.cacheData = `data-cache-auto-${this.id}`;\r\n    this.isLoading = `${this.prefix}-is-loading`;\r\n    this.isActive = `${this.prefix}-is-active`;\r\n    this.activeList = `${this.prefix}-selected`;\r\n    this.selectedOption = `${this.prefix}-selected-option`;\r\n    this.err = `${this.prefix}-error`;\r\n    this.regex = /[|\\\\{}()[\\]^$+*?.]/g;\r\n    this.timeout = null;\r\n\r\n    this.resultWrap = document.createElement('div');\r\n    this.resultList = document.createElement('ul');\r\n    this.cBtn = document.createElement('button');\r\n\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * Initial function\r\n   */\r\n  init = () => {\r\n    const { resultList, root } = this;\r\n\r\n    this.clearbutton();\r\n\r\n    output(root, resultList, this.outputUl, this.resultWrap, this.prefix);\r\n\r\n    // default aria\r\n    // this.reset();\r\n    root.addEventListener('input', this.handleInput);\r\n\r\n    // show all values on click root input\r\n    this.showAll && root.addEventListener('click', this.handleInput);\r\n\r\n    // calback functions\r\n    this.onRender({\r\n      element: root,\r\n      results: resultList,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Actions on input\r\n   *\r\n   * @param {String} type - set attribute depending on type\r\n   * @param {String} target\r\n   */\r\n  cacheAct = (type, target) => {\r\n    const root = this.root;\r\n    if (!this.cache) return;\r\n\r\n    if (type === 'update') {\r\n      root.setAttribute(this.cacheData, target.value);\r\n    } else if (type === 'remove') {\r\n      root.removeAttribute(this.cacheData);\r\n    } else {\r\n      root.value = root.getAttribute(this.cacheData);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle input\r\n   *\r\n   * @param {Event} object\r\n   */\r\n  handleInput = ({ target, type }) => {\r\n    if (\r\n      this.root.getAttribute('aria-expanded') === 'true' &&\r\n      type === 'click'\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const regex = target.value.replace(this.regex, '\\\\$&');\r\n\r\n    // update data attribute cache\r\n    this.cacheAct('update', target);\r\n\r\n    // if showing all values is set on\r\n    // true we are no need timeout\r\n    if (this.showAll && type === 'click') {\r\n      this.reset();\r\n      this.searchItem(regex.trim());\r\n      return;\r\n    }\r\n\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      this.searchItem(regex.trim());\r\n    }, this.delay);\r\n  };\r\n\r\n  /**\r\n   * Default aria\r\n   */\r\n  reset = () => {\r\n    // set attributes to root - input\r\n    setAttributes(this.root, {\r\n      'aria-owns': `${this.id}-list`,\r\n      'aria-expanded': 'false',\r\n      'aria-autocomplete': 'list',\r\n      'aria-activedescendant': '',\r\n      role: 'combobox',\r\n      removeClass: 'auto-expanded',\r\n    });\r\n\r\n    // remove class isActive\r\n    this.resultWrap.classList.remove(this.isActive);\r\n\r\n    // move the view item to the first item\r\n    // this.resultList.scrollTop = 0;\r\n    // scrollResultsToTop(this.resultList, this.resultWrap);\r\n\r\n    // remove result when lengh = 0 and insertToInput is false\r\n    if ((this.matches?.length == 0 && !this.toInput) || this.showAll) {\r\n      this.resultList.innerHTML = '';\r\n    }\r\n\r\n    // set index\r\n    this.index = this.selectFirst ? 0 : -1;\r\n\r\n    // callback function\r\n    this.onClose();\r\n  };\r\n\r\n  /**\r\n   * The async function gets the text from the search\r\n   * and returns the matching array\r\n   *\r\n   * @param {String} value\r\n   */\r\n  searchItem = (value) => {\r\n    this.value = value;\r\n\r\n    // if searching show loading icon\r\n    this.onLoading(true);\r\n\r\n    // hide button clear\r\n    showBtnToClearData(this.cBtn, this.destroy);\r\n\r\n    // if there is no value and clearButton is true\r\n    if (value.length == 0 && this.clearButton) {\r\n      this.cBtn.classList.add('hidden');\r\n    }\r\n\r\n    // if declare characters more then value.len and showAll is false\r\n    // remove class isActive\r\n    if (this.characters > value.length && !this.showAll) {\r\n      this.onLoading();\r\n      return;\r\n    }\r\n\r\n    // callblack function onSearch\r\n    this.onSearch({ currentValue: value, element: this.root })\r\n      .then((result) => {\r\n        const rootValueLength = this.root.value.length;\r\n        const resultLength = result.length;\r\n        // set no result\r\n        this.matches = Array.isArray(result)\r\n          ? [...result]\r\n          : JSON.parse(JSON.stringify(result));\r\n\r\n        this.onLoading();\r\n        this.error();\r\n\r\n        // if use destroy() method\r\n        if (resultLength == 0 && rootValueLength == 0) {\r\n          this.cBtn.classList.add('hidden');\r\n        }\r\n\r\n        if (resultLength == 0 && rootValueLength) {\r\n          this.root.classList.remove('auto-expanded');\r\n          this.reset();\r\n          this.noResults({\r\n            element: this.root,\r\n            currentValue: value,\r\n            template: this.results,\r\n          });\r\n          this.events();\r\n        } else if (resultLength > 0 || isObject(result)) {\r\n          this.index = this.selectFirst ? 0 : -1;\r\n          this.results();\r\n          this.events();\r\n        }\r\n      })\r\n      .catch(() => {\r\n        this.onLoading();\r\n        this.reset();\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Set or remove loading class\r\n   *\r\n   * @param {Boolean} type\r\n   */\r\n  onLoading = (type) =>\r\n    this.root.parentNode.classList[type ? 'add' : 'remove'](this.isLoading);\r\n\r\n  /**\r\n   * Set error class to the root element\r\n   */\r\n  error = () => this.root.classList.remove(this.err);\r\n\r\n  /**\r\n   * Events\r\n   */\r\n  events = () => {\r\n    const { root, resultList } = this;\r\n\r\n    // handle click on keydown [up, down, enter, tab, esc]\r\n    root.addEventListener('keydown', this.handleKeys);\r\n\r\n    //\r\n    root.addEventListener('click', this.handleShowItems);\r\n\r\n    // temporarily disabled mouseleave\r\n    ['mousemove', 'click'].map((eventType) => {\r\n      resultList.addEventListener(eventType, this.handleMouse);\r\n    });\r\n\r\n    // close expanded items\r\n    document.addEventListener('click', this.handleDocClick);\r\n  };\r\n\r\n  /**\r\n   * Results\r\n   *\r\n   * @param {HTMLElement|String} template - html or string returned from the function,\r\n   * look at the example - https://github.com/tomik23/autocomplete/blob/master/docs/js/examples/no-results.js#L30\r\n   */\r\n  results = (template) => {\r\n    // set attribute to root\r\n    setAttributes(this.root, {\r\n      'aria-expanded': 'true',\r\n      addClass: `${this.prefix}-expanded`,\r\n    });\r\n\r\n    // add all found records to otput ul\r\n    this.resultList.innerHTML =\r\n      this.matches.length === 0\r\n        ? this.onResults({\r\n            currentValue: this.value,\r\n            matches: 0,\r\n            template,\r\n          })\r\n        : this.onResults({\r\n            currentValue: this.value,\r\n            matches: this.matches,\r\n            classGroup: this.classGroup,\r\n          });\r\n\r\n    this.resultWrap.classList.add(this.isActive);\r\n\r\n    const checkIfClassGroupExist = this.classGroup\r\n      ? `:not(.${this.classGroup})`\r\n      : '';\r\n\r\n    this.itemsLi = document.querySelectorAll(\r\n      `#${this.outputUl} > li${checkIfClassGroupExist}`\r\n    );\r\n\r\n    // select first element\r\n    this.selectFirstEl();\r\n\r\n    // action on open results\r\n    this.onOpened({\r\n      type: 'results',\r\n      element: this.root,\r\n      results: this.resultList,\r\n    });\r\n\r\n    // adding role, tabindex and aria\r\n    addAriaToAllLiElements(this.itemsLi);\r\n\r\n    // move the view item to the first item\r\n    // this.resultList.scrollTop = 0;\r\n    scrollResultsToTop(this.resultList, this.resultWrap);\r\n  };\r\n\r\n  /**\r\n   * Hangle click on document\r\n   *\r\n   * @param {Event} object\r\n   */\r\n  handleDocClick = ({ target }) => {\r\n    let disableClose = null;\r\n\r\n    // if 'target' is a ul and 'disableCloseOnSelect'\r\n    // is a 'true' set 'disableClose' on true\r\n    if (\r\n      (target.closest('ul') && this.disable) ||\r\n      // when class classDisableClose\r\n      // then do not not close results\r\n      target.closest(`.${this.prevClosing}`)\r\n    ) {\r\n      disableClose = true;\r\n    }\r\n\r\n    if (target.id !== this.id && !disableClose) {\r\n      this.reset();\r\n      return;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Select first element\r\n   */\r\n  selectFirstEl = () => {\r\n    const { activeList, selectedOption, selectFirst, root } = this;\r\n\r\n    this.remAria(document.querySelector(`.${activeList}`));\r\n\r\n    if (!selectFirst) {\r\n      return;\r\n    }\r\n\r\n    const { firstElementChild } = this.resultList;\r\n\r\n    const classSelectFirst =\r\n      this.classGroup && this.matches.length > 0 && selectFirst\r\n        ? firstElementChild.nextElementSibling\r\n        : firstElementChild;\r\n\r\n    // set attribute to first element\r\n    setAttributes(classSelectFirst, {\r\n      id: `${selectedOption}-0`,\r\n      addClass: activeList,\r\n      'aria-selected': 'true',\r\n    });\r\n\r\n    // add fisrst element to root input\r\n    // temporarily turned off\r\n    // if (this.matches.length > 0 && this.toInput) {\r\n    //   this.addToInput(this.itemsLi[this.index]);\r\n    // }\r\n\r\n    // set aria active descendant\r\n    setAriaActivedescendant(root, `${selectedOption}-0`);\r\n\r\n    // scrollIntoView when press up/down arrows\r\n    // followActiveElement(\r\n    //   firstElementChild,\r\n    //   this.outputUl,\r\n    //   this.classGroup,\r\n    //   this.resultList\r\n    // );\r\n  };\r\n\r\n  /**\r\n   * Add/remove class or set attribute\r\n   * @param {HTMLElement} el\r\n   * @param {Object} object\r\n   */\r\n  setAttr = (el, object) => {\r\n    for (let key in object) {\r\n      if (key === 'addClass') {\r\n        el.classList.add(object[key]);\r\n      } else if (key === 'removeClass') {\r\n        el.classList.remove(object[key]);\r\n      } else {\r\n        el.setAttribute(key, object[key]);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * show items when items.length > 0 and is not empty\r\n   */\r\n  handleShowItems = () => {\r\n    const { root, resultWrap, resultList, isActive } = this;\r\n\r\n    // if resultWrap is not active and resultList is not empty\r\n    if (\r\n      resultList.textContent.length > 0 &&\r\n      !resultWrap.classList.contains(isActive)\r\n    ) {\r\n      // set attribute to root\r\n      setAttributes(root, {\r\n        'aria-expanded': 'true',\r\n        addClass: `${this.prefix}-expanded`,\r\n      });\r\n\r\n      // add isActive class to resultWrap\r\n      resultWrap.classList.add(isActive);\r\n\r\n      // move the view item to the first item\r\n      // this.resultList.scrollTop = 0;\r\n      scrollResultsToTop(resultList, resultWrap);\r\n\r\n      // select first element\r\n      this.selectFirstEl();\r\n\r\n      // callback function\r\n      this.onOpened({\r\n        type: 'showItems',\r\n        element: root,\r\n        results: resultList,\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Adding text from the list when li is clicking\r\n   * or adding aria-selected to li elements\r\n   * @param {Event} event\r\n   */\r\n  handleMouse = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { target, type } = event;\r\n    const targetClosest = target.closest('li');\r\n    const targetClosestRole = targetClosest?.hasAttribute('role');\r\n    const activeClass = this.activeList;\r\n    const activeClassElement = document.querySelector(`.${activeClass}`);\r\n\r\n    if (!targetClosest || !targetClosestRole) {\r\n      return;\r\n    }\r\n\r\n    // click on li get element\r\n    if (type === 'click') {\r\n      // get text from clicked li\r\n      this.getTextFromLi(targetClosest);\r\n    }\r\n\r\n    if (\r\n      type === 'mousemove' &&\r\n      !targetClosest.classList.contains(activeClass)\r\n    ) {\r\n      this.remAria(activeClassElement);\r\n\r\n      // add aria to li\r\n      this.setAria(targetClosest);\r\n      this.index = this.indexLiSelected(targetClosest);\r\n\r\n      this.onSelected({\r\n        index: this.index,\r\n        element: this.root,\r\n        object: this.matches[this.index],\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get text from li on enter or click\r\n   *\r\n   * @param {HTMLElement} element\r\n   */\r\n  getTextFromLi = (element) => {\r\n    const { root, index, disable } = this;\r\n\r\n    if (!element || this.matches.length === 0) {\r\n      // set default settings\r\n      !disable && this.reset();\r\n\r\n      return;\r\n    }\r\n\r\n    // get first element from li and set it to root\r\n    getFirstElementFromLiAndAddToInput(element, root);\r\n\r\n    // onSubmit passing text to function\r\n    this.onSubmit({\r\n      index: index,\r\n      element: root,\r\n      object: this.matches[index],\r\n      results: this.resultList,\r\n    });\r\n\r\n    // set default settings\r\n    if (!disable) {\r\n      this.remAria(element);\r\n      this.reset();\r\n    }\r\n\r\n    // show clearBtn when select element\r\n    this.clearButton && this.cBtn.classList.remove('hidden');\r\n\r\n    // remove cache\r\n    this.cacheAct('remove');\r\n  };\r\n\r\n  /**\r\n   * Return which li element was selected\r\n   * by hovering the mouse over\r\n   *\r\n   * @param {HTMLElement} target\r\n   * @returns {Number}\r\n   */\r\n  indexLiSelected = (target) =>\r\n    // get index of li element\r\n    Array.prototype.indexOf.call(this.itemsLi, target);\r\n\r\n  /**\r\n   * Navigating the elements li and enter\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  handleKeys = (event) => {\r\n    const { root } = this;\r\n    const { keyCode } = event;\r\n\r\n    const resultList = this.resultWrap.classList.contains(this.isActive);\r\n\r\n    const matchesLength = this.matches.length + 1;\r\n    this.selectedLi = document.querySelector(`.${this.activeList}`);\r\n\r\n    // switch between keys\r\n    switch (keyCode) {\r\n      case keyCodes.UP:\r\n      case keyCodes.DOWN:\r\n        // Wrong cursor position in the input field #62\r\n        // Prevents the cursor from moving to the beginning\r\n        // of input as the cursor hovers over the results.\r\n        event.preventDefault();\r\n\r\n        if ((matchesLength <= 1 && this.selectFirst) || !resultList) {\r\n          return;\r\n        }\r\n\r\n        // if keyCode is up\r\n        if (keyCode === keyCodes.UP) {\r\n          if (this.index < 0) {\r\n            this.index = matchesLength - 1;\r\n          }\r\n          this.index -= 1;\r\n        } else {\r\n          this.index += 1;\r\n          if (this.index >= matchesLength) {\r\n            this.index = 0;\r\n          }\r\n        }\r\n\r\n        // remove aria-selected\r\n        this.remAria(this.selectedLi);\r\n\r\n        if (\r\n          matchesLength > 0 &&\r\n          this.index >= 0 &&\r\n          this.index < matchesLength - 1\r\n        ) {\r\n          // callback function\r\n          this.onSelected({\r\n            index: this.index,\r\n            element: root,\r\n            object: this.matches[this.index],\r\n          });\r\n\r\n          // set aria-selected\r\n          this.setAria(this.itemsLi[this.index]);\r\n          if (this.toInput && resultList) {\r\n            getFirstElementFromLiAndAddToInput(this.itemsLi[this.index], root);\r\n          }\r\n        } else {\r\n          // catch action\r\n          this.cacheAct();\r\n          setAriaActivedescendant(root);\r\n        }\r\n\r\n        break;\r\n      // keycode enter\r\n      case keyCodes.ENTER:\r\n        this.getTextFromLi(this.selectedLi);\r\n        break;\r\n\r\n      // keycode escape and keycode tab\r\n      case keyCodes.TAB:\r\n      case keyCodes.ESC:\r\n        this.reset();\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set aria label on item li\r\n   *\r\n   * @param {HTMLElement} target\r\n   */\r\n  setAria = (target) => {\r\n    const selectedOption = `${this.selectedOption}-${this.indexLiSelected(\r\n      target\r\n    )}`;\r\n\r\n    // set aria to li\r\n    setAttributes(target, {\r\n      id: selectedOption,\r\n      'aria-selected': 'true',\r\n      addClass: this.activeList,\r\n    });\r\n\r\n    setAriaActivedescendant(this.root, selectedOption);\r\n\r\n    // scrollIntoView when press up/down arrows\r\n    followActiveElement(\r\n      target,\r\n      this.outputUl,\r\n      this.classGroup,\r\n      this.resultList\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Remove aria label from item li\r\n   *\r\n   * @param {HTMLElement} element\r\n   */\r\n  remAria = (element) => {\r\n    if (!element) return;\r\n\r\n    // remove aria from li\r\n    setAttributes(element, {\r\n      id: '',\r\n      removeClass: this.activeList,\r\n      'aria-selected': 'false',\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Create clear button and\r\n   * removing text from the input field\r\n   */\r\n  clearbutton = () => {\r\n    // stop when clear button is disabled\r\n    if (!this.clearButton) return;\r\n\r\n    const { cBtn } = this;\r\n\r\n    // add aria to clear button\r\n    setAttributes(cBtn, {\r\n      class: `${this.prefix}-clear hidden`,\r\n      type: 'button',\r\n      'aria-label': this.clearBtnAriLabel,\r\n    });\r\n\r\n    // insert clear button after input - root\r\n    this.root.insertAdjacentElement('afterend', cBtn);\r\n  };\r\n\r\n  /**\r\n   * Clicking on the clear button\r\n   * publick destroy method\r\n   */\r\n  destroy = () => {\r\n    const { root } = this;\r\n    // if clear button is true then add class hidden\r\n    this.clearButton && this.cBtn.classList.add('hidden');\r\n    // clear value searchId\r\n    root.value = '';\r\n    // set focus\r\n    root.focus();\r\n    // remove li from ul\r\n    this.resultList.textContent = '';\r\n    // set default aria\r\n    this.reset();\r\n    // remove error if exist\r\n    this.error();\r\n\r\n    // callback function\r\n    this.onReset(root);\r\n\r\n    // remove listener\r\n    root.removeEventListener('keydown', this.handleKeys);\r\n    root.removeEventListener('click', this.handleShowItems);\r\n    // remove listener on click on document\r\n    document.removeEventListener('click', this.handleDocClick);\r\n  };\r\n}\r\n"],"names":["setAttributes","el","object","key","classList","add","remove","setAttribute","getFirstElementFromLiAndAddToInput","element","root","value","firstElementChild","getFirstElement","textContent","trim","scrollResultsToTop","resultList","resultWrap","scrollTop","offsetTop","offsetHeight","setAriaActivedescendant","type","followActiveElement","target","outputUl","classGroup","previusElement","previousSibling","previusElementHeight","getAttribute","allLi","document","querySelectorAll","height","slice","call","map","getClassGroupHeight","offsetBottom","keyCodes","Autocomplete","constructor","delay","clearButton","howManyCharacters","selectFirst","insertToInput","showAllValues","cache","disableCloseOnSelect","classPreventClosing","classPrefix","ariaLabelClear","onSearch","onResults","onSubmit","onOpened","onReset","onRender","onClose","noResults","onSelectedItem","init","this","clearbutton","prefix","id","tabIndex","role","addClass","insertAdjacentElement","parentNode","insertBefore","nextSibling","output","addEventListener","handleInput","showAll","results","cacheAct","cacheData","removeAttribute","_ref2","regex","replace","reset","searchItem","clearTimeout","timeout","setTimeout","removeClass","isActive","matches","length","toInput","innerHTML","index","onLoading","destroy","showBtnToClearData","cBtn","characters","currentValue","then","result","rootValueLength","resultLength","Array","isArray","JSON","parse","stringify","error","template","events","Object","isObject","catch","isLoading","err","handleKeys","handleShowItems","eventType","handleMouse","handleDocClick","checkIfClassGroupExist","itemsLi","selectFirstEl","i","tabindex","addAriaToAllLiElements","_ref3","disableClose","closest","disable","prevClosing","activeList","selectedOption","remAria","querySelector","classSelectFirst","nextElementSibling","setAttr","contains","event","preventDefault","targetClosest","targetClosestRole","hasAttribute","activeClass","activeClassElement","getTextFromLi","setAria","indexLiSelected","onSelected","prototype","indexOf","keyCode","matchesLength","selectedLi","class","clearBtnAriLabel","focus","removeEventListener","getElementById","Boolean","_ref4","Promise","resolve","createElement"],"mappings":"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"}